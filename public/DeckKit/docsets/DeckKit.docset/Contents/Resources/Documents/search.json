{"Classes/DKMidsectionDescriptionNode.html#/c:@M@DeckKit@objc(cs)DKMidsectionDescriptionNode(py)ownerCard":{"name":"ownerCard","abstract":"<p>Parent card the button is attached to</p>","parent_name":"DKMidsectionDescriptionNode"},"Classes/DKCardNode.html#/c:@M@DeckKit@objc(cs)DKCardNode(py)CARD_WIDTH":{"name":"CARD_WIDTH","abstract":"<p>Hard coding width and height to avoid multiple calls to get acuumulated frame","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/c:@M@DeckKit@objc(cs)DKCardNode(py)CARD_HEIGHT":{"name":"CARD_HEIGHT","abstract":"<p>Hard coding width and height to avoid multiple calls to get acuumulated frame</p>","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/c:@M@DeckKit@objc(cs)DKCardNode(py)DEFAULT_Y_POS":{"name":"DEFAULT_Y_POS","abstract":"<p>Hard coded reference to the Y offset since the card isn&rsquo;t dead center vertically</p>","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/c:@M@DeckKit@objc(cs)DKCardNode(py)DISTANCE_BETWEEN_BUTTONS":{"name":"DISTANCE_BETWEEN_BUTTONS","abstract":"<p>Hard coded distance for when we iterate and add a lot of buttons</p>","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/c:@M@DeckKit@objc(cs)DKCardNode(py)BUTTON_STARTING_POSITION":{"name":"BUTTON_STARTING_POSITION","abstract":"<p>Position of first button</p>","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/s:7DeckKit10DKCardNodeC8delegateAA0C8Protocol_pSgXwvp":{"name":"delegate","abstract":"<p>Responder for card events</p>","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/c:@M@DeckKit@objc(cs)DKCardNode(py)identifier":{"name":"identifier","abstract":"<p>The header name will be the unique identifier of the card</p>","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/c:@M@DeckKit@objc(cs)DKCardNode(py)locked":{"name":"locked","abstract":"<p>Specifies if the card will respond to global hide / show events</p>","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/c:@M@DeckKit@objc(cs)DKCardNode(py)dealt":{"name":"dealt","abstract":"<p>Flag indiciating if the card is visible on screen</p>","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/c:@M@DeckKit@objc(cs)DKCardNode(im)slideIntoView":{"name":"slideIntoView()","abstract":"<p>When the card is offscreen, move it into view</p>","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/c:@M@DeckKit@objc(cs)DKCardNode(im)slideOutOfView":{"name":"slideOutOfView()","abstract":"<p>When the card is onscreen, move it out</p>","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/s:7DeckKit10DKCardNodeC6AnchorO":{"name":"Anchor","abstract":"<p>Enum to handle which side of the screen the card sticks to</p>","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/mouseDown(with:)":{"name":"mouseDown(with:)","parent_name":"DKCardNode"},"Classes/DKCardNode.html#/mouseUp(with:)":{"name":"mouseUp(with:)","parent_name":"DKCardNode"},"Classes/DKButtonNode.html#/c:@M@DeckKit@objc(cs)DKButtonNode(py)identifier":{"name":"identifier","abstract":"<p>Unique key for the button</p>","parent_name":"DKButtonNode"},"Classes/DKButtonNode.html#/c:@M@DeckKit@objc(cs)DKButtonNode(py)ownerCard":{"name":"ownerCard","abstract":"<p>Parent card the button is attached to</p>","parent_name":"DKButtonNode"},"Classes/DKButtonNode.html#/c:@M@DeckKit@objc(cs)DKButtonNode(py)currentlySelected":{"name":"currentlySelected","abstract":"<p>Flag to reference if the current button should stay selected</p>","parent_name":"DKButtonNode"},"Classes.html#/c:@M@DeckKit@objc(cs)DKAssignedImageNode":{"name":"DKAssignedImageNode","abstract":"<p>Convenience class to put images inside a context button. Must be manually created and added to context node by caller.</p>"},"Classes/DKButtonNode.html":{"name":"DKButtonNode","abstract":"<p>Base class for all button capsules on the card</p>"},"Classes.html#/s:7DeckKit7DKCacheC":{"name":"DKCache","abstract":"<p>Many card elements are reused over and over. Once a sprite node is created, the node will get cached and then copied when being applied to the card.</p>"},"Classes/DKCardNode.html":{"name":"DKCardNode","abstract":"<p>The empty parent node that contains the entire card.</p>"},"Classes.html#/c:@M@DeckKit@objc(cs)DKDescriptionHeader":{"name":"DKDescriptionHeader","abstract":"<p>Base class for all button capsules on the card</p>"},"Classes.html#/c:@M@DeckKit@objc(cs)DKHalfButtonNode":{"name":"DKHalfButtonNode","abstract":"<p>Base class for all button capsules on the card</p>"},"Classes.html#/c:@M@DeckKit@objc(cs)DKHeroCardNode":{"name":"DKHeroCardNode","abstract":"<p>A test example of subclassing a card for custom behavior</p>"},"Classes/DKMidsectionDescriptionNode.html":{"name":"DKMidsectionDescriptionNode","abstract":"<p>Base class for all button capsules on the card</p>"},"Classes.html#/c:@M@DeckKit@objc(cs)DKSkillLevelNode":{"name":"DKSkillLevelNode","abstract":"<p>Convenience class to put skill bars inside a context button. Must be manually created and added to context nodeby caller.</p>"},"Classes.html#/c:@M@DeckKit@objc(cs)DKTextHeader":{"name":"DKTextHeader","abstract":"<p>Base class for all button capsules on the card</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"}}