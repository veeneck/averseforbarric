{"Structs/Modifier.html#/s:12FormationKit8ModifierV5ticksSiSgvp":{"name":"ticks","abstract":"<p>How many ticks before the modifier expires</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV8intervalSdSgvp":{"name":"interval","abstract":"<p>Time that should pass between each tick</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV8durationSdSgvp":{"name":"duration","abstract":"<p>If the modifier is not a DoT type effect, it can just have a fixed duration</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV11timeElapsedSdvp":{"name":"timeElapsed","abstract":"<p>Time when the current tick started</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV4nameSSvp":{"name":"name","abstract":"<p>Name of effect to isolate when removing particle</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV9attributeAA21FKAttributesComponentC9AttributeOvp":{"name":"attribute","abstract":"<p>Category of modifier which handles conditional splits</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV8behaviorAC8BehaviorOvp":{"name":"behavior","abstract":"<p>Defines how the modifier will work throughout the code base</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV12modificationAC12ModificationOvp":{"name":"modification","abstract":"<p>Defines if the results of the modifier should permanently or temporarily change an attribute</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV10combatTypeAC15CombatAttributeOvp":{"name":"combatType","abstract":"<p>Defines the type of modifier in terms of strnegth, weakness, resistance</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV13combatSubtypeAC015CombatAttributeE0Ovp":{"name":"combatSubtype","abstract":"<p>Further breakdown of modifier type</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV6targetAC6TargetOvp":{"name":"target","abstract":"<p>What this modifier should apply to</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV10baseAmountSfSgvp":{"name":"baseAmount","abstract":"<p>The amount to modify by</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV9appliedByAA7AbilityCSgXwvp":{"name":"appliedBy","abstract":"<p>A reference back to the Ability that applied this modifier. A modifier that comes with leveling up would not have any value here,","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV6originSC7CGPointVSgvp":{"name":"origin","abstract":"<p>A reference back to the position this modifier was spawned at. Useful to move objects around based on the position (i.e. catapult blow forces hit units backwards)</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV5force12CoreGraphics7CGFloatVSgvp":{"name":"force","abstract":"<p>The force of the modifier. For example, a catapult blast would have highest, while a sword attack would be minor. Scale of 0 to 100</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV8accuracySivp":{"name":"accuracy","abstract":"<p>The chance that the modifier is successfully applied. 10 = 100% chance</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierVA2C8BehaviorO8behavior_AA21FKAttributesComponentC9AttributeO4typeSi5ticksSd8intervalSS4nameAC12ModificationO12modificationAA7AbilityCSg9appliedBytcfc":{"name":"init(behavior:type:ticks:interval:name:modification:appliedBy:)","abstract":"<p>This initializes an over time modifier. Think Poison or Regen.</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierVA2C8BehaviorO8behavior_AA21FKAttributesComponentC9AttributeO4typeSd8durationSS4nameAC12ModificationO12modificationAA7AbilityCSg9appliedBytcfc":{"name":"init(behavior:type:duration:name:modification:appliedBy:)","abstract":"<p>This initializes a modifier that will expire after a given duration</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierVA2C8BehaviorO8behavior_AA21FKAttributesComponentC9AttributeO4typeSS4nameAC12ModificationO12modificationAA7AbilityCSg9appliedBytcfc":{"name":"init(behavior:type:name:modification:appliedBy:)","abstract":"<p>This initializes an instant modifier</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV8BehaviorO":{"name":"Behavior","abstract":"<p>Hard coded options for how a modifier can behave. Used across the entire code base.</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV12ModificationO":{"name":"Modification","abstract":"<p>Hard coded options for how a modifier can behave. Used across the entire code base.</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV15CombatAttributeO":{"name":"CombatAttribute","abstract":"<p>Hard coded options for strengths and weaknesses of modifiers</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV22CombatAttributeSubtypeO":{"name":"CombatAttributeSubtype","abstract":"<p>Used to further classify an attack</p>","parent_name":"Modifier"},"Structs/Modifier.html#/s:12FormationKit8ModifierV6TargetO":{"name":"Target","abstract":"<p>Most modifiers default to the Ability.Target. This is intended for abiltiies that affect a primary target, but then do secondary modifications.","parent_name":"Modifier"},"Structs/CommandInstructions.html#/s:12FormationKit19CommandInstructionsV11targetSquadAA13FKSquadEntityCSgvp":{"name":"targetSquad","abstract":"<p>A Squad to perform the ability on.</p>","parent_name":"CommandInstructions"},"Structs/CommandInstructions.html#/s:12FormationKit19CommandInstructionsV15desiredPositionSC7CGPointVSgvp":{"name":"desiredPosition","abstract":"<p>A specific place on the map to move.</p>","parent_name":"CommandInstructions"},"Structs/CommandInstructions.html#/s:12FormationKit19CommandInstructionsV14desiredHeadingSfSgvp":{"name":"desiredHeading","abstract":"<p>A direction to face related to the ability.</p>","parent_name":"CommandInstructions"},"Structs/CommandInstructions.html#/s:12FormationKit19CommandInstructionsV16desiredPositionsSaySC7CGPointVGSgvp":{"name":"desiredPositions","abstract":"<p>Positions for all units of the squad if calculated ahead of time &hellip; to be used as an override.</p>","parent_name":"CommandInstructions"},"Structs/CommandInstructions.html#/s:12FormationKit19CommandInstructionsVACycfc":{"name":"init()","abstract":"<p>Necessary for external projects to create this object</p>","parent_name":"CommandInstructions"},"Structs/CommandInstructions.html":{"name":"CommandInstructions","abstract":"<p>Instrucitons necessary to run any command / ability combination."},"Structs/Modifier.html":{"name":"Modifier","abstract":"<p>Whenever any AttributeComponent.Attribute needs to be modified it is done through a Modifier. This small struct can be attached to any object but is mainly used in Ability objects."},"Protocols/FKPathfindingProtocol.html#/s:12FormationKit21FKPathfindingProtocolP14getPathToPointSo6GKPathC4path_SaySo13GKGraphNode2DCG5nodesSf0J4SizetSgSC7CGPointV_AO3endSf10unitRadiusSf0jR0tF":{"name":"getPathToPoint(_:end:unitRadius:pathRadius:)","abstract":"<p>Main call for an agent to find a path to a target position.</p>","parent_name":"FKPathfindingProtocol"},"Protocols/FKPathfindingProtocol.html#/s:12FormationKit21FKPathfindingProtocolP12isPointValidSb4simd6float2VF":{"name":"isPointValid(_:)","abstract":"<p>Used to check if a point is somewhere that the unit can move or if it is off of the map</p>","parent_name":"FKPathfindingProtocol"},"Protocols/FKPathfindingProtocol.html#/s:12FormationKit21FKPathfindingProtocolP16getAdjustedDepth12CoreGraphics7CGFloatVSC7CGPointV8position_AG9zPositiontF":{"name":"getAdjustedDepth(position:zPosition:)","abstract":"<p>Used to adjust depth of an object based off of object sin the navmesh</p>","parent_name":"FKPathfindingProtocol"},"Protocols/FKPathfindingProtocol.html#/s:12FormationKit21FKPathfindingProtocolP16obstaclesToAvoidSaySo10GKObstacleCGyF":{"name":"obstaclesToAvoid()","abstract":"<p>Used for avoidance in agent behavior</p>","parent_name":"FKPathfindingProtocol"},"Protocols/FKButtonNodeProtocol.html#/mouseDown(with:)":{"name":"mouseDown(with:)","parent_name":"FKButtonNodeProtocol"},"Protocols/FKButtonNodeProtocol.html#/mouseUp(with:)":{"name":"mouseUp(with:)","parent_name":"FKButtonNodeProtocol"},"Protocols/FKButtonNodeProtocol.html#/rightMouseDown(with:)":{"name":"rightMouseDown(with:)","parent_name":"FKButtonNodeProtocol"},"Protocols/FKButtonNodeProtocol.html":{"name":"FKButtonNodeProtocol","abstract":"<p>A type that can respond to <code>ButtonNode</code> button press events.</p>"},"Other Protocols.html#/s:12FormationKit18FKHeraldryProtocolP":{"name":"FKHeraldryProtocol","abstract":"<p>So that we can separate user input from this framework, this protocl was created. This should allow any caller to respond to user interaction with the squads</p>"},"Protocols/FKPathfindingProtocol.html":{"name":"FKPathfindingProtocol","abstract":"<p>So that we can separate pathfinding from this framework, this protocl was created. The goal is for movement components to have a strategy that is called whenever a move is needed.</p>"},"Other Protocols.html#/s:12FormationKit21ContactNotifiableTypeP":{"name":"ContactNotifiableType","abstract":"<p>Used by each entity to route their own physcis contacts</p>"},"Other Protocols.html#/s:12FormationKit15FKSquadProtocolP":{"name":"FKSquadProtocol","abstract":"<p>So that we can separate user input from this framework, this protocl was created. This should allow any caller to respond to user interaction with the squads</p>"},"Other Functions.html#/s:12FormationKit2eeoiSbAA13FKSquadEntityC_ADtF":{"name":"==(_:_:)","abstract":"<p>Comparisons for squads</p>"},"Classes/FKTriangleFormation.html#/s:12FormationKit010FKTriangleA0C19buildFixedLocationsyyF":{"name":"buildFixedLocations()","abstract":"<p>For a grid, build from inside out, with first row up front.","parent_name":"FKTriangleFormation"},"Classes/FKTriangleFormation.html#/s:12FormationKit010FKTriangleA0C22findPriorityOfPosition33_EE200D03600095C6DA51319BD4F00CE5LLS2i_Si5gridYSi7columnstF":{"name":"findPriorityOfPosition(_:gridY:columns:)","abstract":"<p>This uses the exact same code as FKGridFormation. It works because of luck. No need to touch now unless some significant","parent_name":"FKTriangleFormation"},"Classes/FKTargetingFactory.html#/s:12FormationKit18FKTargetingFactoryC17getEligbleTargetsSayAA13FKSquadEntityCGAF5squad_tF":{"name":"getEligbleTargets(squad:)","abstract":"<p>Main call to get targets that the AI should consider</p>","parent_name":"FKTargetingFactory"},"Classes/FKTargetingFactory.html#/s:12FormationKit18FKTargetingFactoryC12enemyIsValidSbAA13FKSquadEntityC5squad_AF0E0tF":{"name":"enemyIsValid(squad:enemy:)","abstract":"<p>Checks to run on every target before they are approved</p>","parent_name":"FKTargetingFactory"},"Classes/FKTargetingFactory.html#/s:12FormationKit18FKTargetingFactoryC8isOnWallSbAA13FKSquadEntityC6target_tF":{"name":"isOnWall(target:)","abstract":"<p>Right now we&rsquo;re saying no attacking units on walls</p>","parent_name":"FKTargetingFactory"},"Classes/FKTargetingFactory.html#/s:12FormationKit18FKTargetingFactoryC9isFleeingSbAA13FKSquadEntityC6target_tF":{"name":"isFleeing(target:)","abstract":"<p>No attacking units when they are fleeing</p>","parent_name":"FKTargetingFactory"},"Classes/FKTargetingFactory.html#/s:12FormationKit18FKTargetingFactoryC24needsToAvoidFriendlyFireSbAA13FKSquadEntityC5squad_AF6targettF":{"name":"needsToAvoidFriendlyFire(squad:target:)","abstract":"<p>Friendly NPC&rsquo;s will never attack if it causes friendly fire</p>","parent_name":"FKTargetingFactory"},"Classes/FKSeekingState.html#/c:@M@FormationKit@objc(cs)FKSeekingState(im)moveTowardsDesiredPosition:":{"name":"moveTowardsDesiredPosition(_:)","abstract":"<p>Creates the MovementInstructions to execute the move.</p>","parent_name":"FKSeekingState"},"Classes/FKQueueComponent.html#/s:12FormationKit16FKQueueComponentC5queueSayAA9FKCommandCGvp":{"name":"queue","abstract":"<p>All commands currently waiting to be processed</p>","parent_name":"FKQueueComponent"},"Classes/FKQueueComponent.html#/s:12FormationKit16FKQueueComponentC14currentCommandAA9FKCommandCSgvp":{"name":"currentCommand","abstract":"<p>Direct link to currentCommand at index 0 of the queue.</p>","parent_name":"FKQueueComponent"},"Classes/FKQueueComponent.html#/s:12FormationKit16FKQueueComponentC14getNextCommandAA9FKCommandCSgyF":{"name":"getNextCommand()","abstract":"<p>This is meant to be called frequently. If there are no active commands, the next one will","parent_name":"FKQueueComponent"},"Classes/FKQueueComponent.html#/c:@M@FormationKit@objc(cs)FKQueueComponent(im)emptyQueue":{"name":"emptyQueue()","abstract":"<p>Remove all items from the queue.</p>","parent_name":"FKQueueComponent"},"Classes/FKQueueComponent.html#/s:12FormationKit16FKQueueComponentC10addCommandyAA9FKCommandCF":{"name":"addCommand(_:)","abstract":"<p>Add a command to the queue. If current command is blocking, this will just be appended","parent_name":"FKQueueComponent"},"Classes/FKQueueComponent.html#/c:@M@FormationKit@objc(cs)FKQueueComponent(im)cancelCurrentCommand":{"name":"cancelCurrentCommand()","abstract":"<pre class=\"highlight swift\"><code>   <span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"s\">\"Trying to run exact command\"</span><span class=\"p\">)</span>","parent_name":"FKQueueComponent"},"Classes/FKQueueComponent.html#/c:@M@FormationKit@objc(cs)FKQueueComponent(im)completeCommand":{"name":"completeCommand()","abstract":"<p>Called when command is overriden, or when command reaches its natural completion.</p>","parent_name":"FKQueueComponent"},"Classes/FKPhysicsService.html#/s:12FormationKit16FKPhysicsServiceC10collisionss10DictionaryVyAC16UnitPhysicsStateOs6UInt32VGvp":{"name":"collisions","abstract":"<p>Lookup for which states should respond to which collisions</p>","parent_name":"FKPhysicsService"},"Classes/FKPhysicsService.html#/s:12FormationKit16FKPhysicsServiceC8contactss10DictionaryVyAC16UnitPhysicsStateOs6UInt32VGvp":{"name":"contacts","abstract":"<p>Lookup for which states should respond to which contacts</p>","parent_name":"FKPhysicsService"},"Classes/FKPhysicsService.html#/s:12FormationKit16FKPhysicsServiceC12ColliderTypeO":{"name":"ColliderType","abstract":"<p>Defines different types of physics bodies</p>","parent_name":"FKPhysicsService"},"Classes/FKPhysicsService.html#/s:12FormationKit16FKPhysicsServiceC16UnitPhysicsStateO":{"name":"UnitPhysicsState","abstract":"<p>Used to handle logic. For example, both a flying and ground character would react to an arrow in the same way, but not every case is the same.","parent_name":"FKPhysicsService"},"Classes/FKPhysicsService.html#/s:12FormationKit16FKPhysicsServiceC15didBeginContactySo09SKPhysicsG0CF":{"name":"didBeginContact(_:)","abstract":"<p>Will route any contact between a node and entity on either side of the event to trigger the notification.","parent_name":"FKPhysicsService"},"Classes/FKPhysicsComponent.html#/s:12FormationKit18FKPhysicsComponentC5stateAA0C7ServiceC16UnitPhysicsStateOvp":{"name":"state","abstract":"<p>Handle on the current CharacterPhysicsState of the component</p>","parent_name":"FKPhysicsComponent"},"Classes/FKPhysicsComponent.html#/s:12FormationKit18FKPhysicsComponentCACs6UInt32V8category_AA0C7ServiceC16UnitPhysicsStateO5state12CoreGraphics7CGFloatV6radiusAA12FKUnitEntityC6entitytcfc":{"name":"init(category:state:radius:entity:)","abstract":"<p>Adds a physicsbody to the node of a character. Requires RenderComponent to be initialized before calling this.</p>","parent_name":"FKPhysicsComponent"},"Classes/FKPhysicsComponent.html#/s:12FormationKit18FKPhysicsComponentC18changePhysicsStateyAA0C7ServiceC04UnitfG0O_s6UInt32VSg8categorytF":{"name":"changePhysicsState(_:category:)","abstract":"<p>Change a physics body at run time. For example, an invisible spell is cast on someone</p>","parent_name":"FKPhysicsComponent"},"Classes/FKPhysicsComponent.html#/s:12FormationKit18FKPhysicsComponentC13inContactWithSbAA0C7ServiceC12ColliderTypeOF":{"name":"inContactWith(_:)","abstract":"<p>Checks if the node is currently in contact with the parameter.</p>","parent_name":"FKPhysicsComponent"},"Classes/FKPhysicsComponent.html#/c:@M@FormationKit@objc(cs)FKPhysicsComponent(im)contactWithAoEBegan:":{"name":"contactWithAoEBegan(_:)","abstract":"<p>AoE Abilities have physics circles, and their modifiers are applied here</p>","parent_name":"FKPhysicsComponent"},"Classes/FKOrderService.html#/s:12FormationKit14FKOrderServiceC15unitIsOffscreenSbAA13FKSquadEntityC5squad_AA13FKAIComponentC10BestTargetV4besttF":{"name":"unitIsOffscreen(squad:best:)","abstract":"<p>When a ranged unit spawns it is off screen. Sometimes, AI will find a target immediately in range. Walk on screen before firing.</p>","parent_name":"FKOrderService"},"Classes/FKObjectPoolService.html#/s:12FormationKit19FKObjectPoolServiceC05addToD0AA16FKPoolableObjectCSgSS8poolName_So12SKSpriteNodeC6spritetF":{"name":"addToPool(poolName:sprite:)","abstract":"<p>Add a sprite to the pool. Expects the sprite to already be in the world. Requiring it to already exist means that the sprite","parent_name":"FKObjectPoolService"},"Classes/FKObjectPoolService.html#/s:12FormationKit19FKObjectPoolServiceC8checkoutAA16FKPoolableObjectCSgSS4from_tF":{"name":"checkout(from:)","abstract":"<p>Grab an object from the pool</p>","parent_name":"FKObjectPoolService"},"Classes/FKObjectPoolService.html#/s:12FormationKit19FKObjectPoolServiceC8returnToyAA16FKPoolableObjectCF":{"name":"returnTo(_:)","abstract":"<p>Return an object to the pool</p>","parent_name":"FKObjectPoolService"},"Classes/FKObjectPoolService.html#/s:12FormationKit19FKObjectPoolServiceC023addCommonBattleAssetsToD0ySo6SKNodeC5layer_tF":{"name":"addCommonBattleAssetsToPool(layer:)","abstract":"<p>Preload all guaranteed FormationKit assets like arrows, blood, shadows","parent_name":"FKObjectPoolService"},"Classes/FKMovingState.html#/s:12FormationKit13FKMovingStateC10findPathToSo6GKPathC4path_SaySo13GKGraphNode2DCG5nodesSf0I4SizetSgSC7CGPointVF":{"name":"findPathTo(_:)","abstract":"<p>Convenince method to find a path. Localize points to scene and factor squad radius.</p>","parent_name":"FKMovingState"},"Classes/FKMovingState.html#/s:12FormationKit13FKMovingStateC20hasArrivedAtPositionSb7arrived_12CoreGraphics7CGFloatV8distancetAA13FKSquadEntityC_SC7CGPointV7desiredAH6buffertFZ":{"name":"hasArrivedAtPosition(_:desired:buffer:)","abstract":"<p>When an agent has arrived we can stop steering, so this is checked frequently. This checks difference between points in scene instead of agent simulation.</p>","parent_name":"FKMovingState"},"Classes/FKMoraleComponent.html#/c:@M@FormationKit@objc(cs)FKMoraleComponent(im)runFleeAbility":{"name":"runFleeAbility()","abstract":"<p>Flee is triggered two ways. One, when the ability is click by the user. In that case, just process the code. Two, dynamically (i..e: archers are engaged and roll to flee).","parent_name":"FKMoraleComponent"},"Classes/FKMoraleComponent.html#/c:@M@FormationKit@objc(cs)FKMoraleComponent(im)markPendingCommandsAsCompleted:":{"name":"markPendingCommandsAsCompleted(_:)","abstract":"<p>Cancels any pending commands, and empties the squads queue</p>","parent_name":"FKMoraleComponent"},"Classes/FKMoraleComponent.html#/c:@M@FormationKit@objc(cs)FKMoraleComponent(im)endCombatIfEngaged:":{"name":"endCombatIfEngaged(_:)","abstract":"<p>Disengage from anyone this squad is attacking</p>","parent_name":"FKMoraleComponent"},"Classes/FKMoraleComponent.html#/c:@M@FormationKit@objc(cs)FKMoraleComponent(im)cancelAllCharacterEntityCombatAndSetIdle:":{"name":"cancelAllCharacterEntityCombatAndSetIdle(_:)","abstract":"<p>Disengage individual units and set them to idle</p>","parent_name":"FKMoraleComponent"},"Classes/FKMoraleComponent.html#/c:@M@FormationKit@objc(cs)FKMoraleComponent(im)cancelExistingMove:":{"name":"cancelExistingMove(_:)","abstract":"<p>Stop all movement</p>","parent_name":"FKMoraleComponent"},"Classes/FKMoraleComponent.html#/c:@M@FormationKit@objc(cs)FKMoraleComponent(im)randomizeWalkingSpeedIncrease:":{"name":"randomizeWalkingSpeedIncrease(_:)","abstract":"<p>try to stagger units walking speed</p>","parent_name":"FKMoraleComponent"},"Classes/FKMoraleComponent.html#/c:@M@FormationKit@objc(cs)FKMoraleComponent(im)shouldFlee:":{"name":"shouldFlee(_:)","abstract":"<p>Logic to determine whether or nto to flee. Will grow to include randomization</p>","parent_name":"FKMoraleComponent"},"Classes/FKMoraleComponent.html#/c:@M@FormationKit@objc(cs)FKMoraleComponent(im)shouldContinueFleeing":{"name":"shouldContinueFleeing()","abstract":"<p>The squad will run checks on interval to see if they should regroup</p>","parent_name":"FKMoraleComponent"},"Classes/FKModifierComponent.html#/s:12FormationKit19FKModifierComponentC9modifiersSayAA8ModifierVGvp":{"name":"modifiers","abstract":"<p>Active modifiers on the character</p>","parent_name":"FKModifierComponent"},"Classes/FKModifierComponent.html#/c:@M@FormationKit@objc(cs)FKModifierComponent(im)resolveTickModifier:secondsElapsed:":{"name":"resolveTickModifier(_:secondsElapsed:)","abstract":"<p>Remove when last tick is finished, run damage if necessary</p>","parent_name":"FKModifierComponent"},"Classes/FKModifierComponent.html#/c:@M@FormationKit@objc(cs)FKModifierComponent(im)resolveDurationModifier:secondsElapsed:":{"name":"resolveDurationModifier(_:secondsElapsed:)","abstract":"<p>Remove when duration has experied</p>","parent_name":"FKModifierComponent"},"Classes/FKModifierComponent.html#/s:12FormationKit19FKModifierComponentC14removeModifieryAA0F0VF":{"name":"removeModifier(_:)","abstract":"<p>utility function to remove modifier</p>","parent_name":"FKModifierComponent"},"Classes/FKModifierComponent.html#/c:@M@FormationKit@objc(cs)FKModifierComponent(im)removeNegativeEnemyModifiers":{"name":"removeNegativeEnemyModifiers()","abstract":"<p>utility function to purify a unit and remove modifiers applied by the enemy</p>","parent_name":"FKModifierComponent"},"Classes/FKModifierComponent.html#/s:12FormationKit19FKModifierComponentC11addModifieryAA0F0VF":{"name":"addModifier(_:)","abstract":"<p>Add a modifier. Will have to handle stacking, order of addition, etc</p>","parent_name":"FKModifierComponent"},"Classes/FKModifierComponent.html#/c:@M@FormationKit@objc(cs)FKModifierComponent(im)updateWithDeltaTime:":{"name":"update(deltaTime:)","abstract":"<p>Keeps tabs of active modifiers and cleans up modifiers that have expired</p>","parent_name":"FKModifierComponent"},"Classes/FKModifierComponent.html#/s:12FormationKit19FKModifierComponentC15processModifieryAA0F0VF":{"name":"processModifier(_:)","abstract":"<p>Some modifiers needed to be manually triggered because it is too intensive to check them every frame.","parent_name":"FKModifierComponent"},"Classes/FKHeroEntity.html#/s:12FormationKit12FKHeroEntityCACSS4name_So7SKSceneCSg5sceneSo6SKNodeCSg5layerAA21FKPathfindingProtocol_pSg10pathfinderAA16FKPhysicsServiceC16UnitPhysicsStateO7physicstcfc":{"name":"init(name:scene:layer:pathfinder:physics:)","parent_name":"FKHeroEntity"},"Classes/FKHeroEntity.html#/c:@M@FormationKit@objc(cs)FKHeroEntity(im)addUnitToSquad:":{"name":"addUnitToSquad(_:)","abstract":"<p>The goal is for units to be able to act as individuals without a squad. Examples would be cutscenes, or heroes.","parent_name":"FKHeroEntity"},"Classes/FKHeroComponent.html#/s:12FormationKit15FKHeroComponentC9abilitiesSayAA011FKAbilitiesD0C13ActiveAbilityVGvp":{"name":"abilities","abstract":"<p>A list of all abilities a hero will add to the squad. This is just the name of the ability, and is used to add / remove / reference dynamically as a hero dies, or gets moved between squads</p>","parent_name":"FKHeroComponent"},"Classes/FKHeroComponent.html#/s:12FormationKit15FKHeroComponentC14pendingCommandAA9FKCommandCSgvp":{"name":"pendingCommand","abstract":"<p>When a special hero ability is order, the hero will switch to the appropriate state, and then reference this for the","parent_name":"FKHeroComponent"},"Classes/FKHeroComponent.html#/s:12FormationKit15FKHeroComponentC13isHeroAbilitySbAA0G0CF":{"name":"isHeroAbility(_:)","abstract":"<p>Quick convenience lookup to see if an ability belongs to this hero</p>","parent_name":"FKHeroComponent"},"Classes/FKHeroComponent.html#/s:12FormationKit15FKHeroComponentC10runAbilityyAA9FKCommandCF":{"name":"runAbility(_:)","abstract":"<p>Hero specific abilities will end up here, and this function should send the hero into the appropriate state","parent_name":"FKHeroComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(py)root":{"name":"root","abstract":"<p>The actual node containing the heraldry icon and crop.</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(py)name":{"name":"name","abstract":"<p>Used by long press recognizer to verify this node is touched</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(py)heightAboveUnit":{"name":"heightAboveUnit","abstract":"<p>Where to position the heralry. Larger units (i.e.: catapult) may need to change this.</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(py)highlightRing":{"name":"highlightRing","abstract":"<p>Outline of the heraldry shield. Can grow / pulse to emphasize certain actions if needed</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(py)innerShape":{"name":"innerShape","abstract":"<p>Inner shape of the heraldry shield. Used to both crop overlays, and also it has a white gradient, so we can turn edges of shield different colors</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(py)stateTextures":{"name":"stateTextures","abstract":"<p>Collection of state textures. We store a reference because crop nodes are slow</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(py)stateOverlay":{"name":"stateOverlay","abstract":"<p>The actual sprite that an active state texture would display in</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(py)distanceFromCamera":{"name":"distanceFromCamera","abstract":"<p>Distance from center of screen. Negative value indicates off screen</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(py)maskedHealthBars":{"name":"maskedHealthBars","abstract":"<p>The masked portion that shows the health on the edges of the icon.</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/s:12FormationKit19FKHeraldryComponentC8delegateAA0C8Protocol_pSgvp":{"name":"delegate","abstract":"<p>Responder for user input events</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(py)hasFocus":{"name":"hasFocus","abstract":"<p>May have to break this up into stat emachine, but for now track focus in a bool</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(py)liveUpdate":{"name":"liveUpdate","abstract":"<p>Because the inside crop, and render to texture, is a slow process, we dpno&rsquo;t always want the heraldry to update","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/s:12FormationKit19FKHeraldryComponentC11crestColorss10DictionaryVyAA13FKSquadEntityC10ControllerOAFySSSo7UIColorCGGvp":{"name":"crestColors","abstract":"<p>Colors to use to illustrate enemies, player controlled, etc</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/s:12FormationKit19FKHeraldryComponentCACSS4name_Si12currentUnitsSi03maxG0AA13FKSquadEntityC10ControllerO10controllerSo7SKSceneC5sceneAA0C8Protocol_p8delegatetcfc":{"name":"init(name:currentUnits:maxUnits:controller:scene:delegate:)","abstract":"<p>This initiliazer allows us to create this component without a squad. If this component is added to the Squad entity","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)setHeightAboveUnit":{"name":"setHeightAboveUnit()","abstract":"<p>Dynamically adjust placement based on unit size.</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)enableLongPressForStats":{"name":"enableLongPressForStats()","abstract":"<p>After heraldry has been added to world, optionally enable long press that shows unit stats menu</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/s:12FormationKit19FKHeraldryComponentC10setupCrestySS_Si12currentUnitsSi03maxH0AA13FKSquadEntityC10ControllerO10controllertF":{"name":"setupCrest(_:currentUnits:maxUnits:controller:)","abstract":"<p>This is a one time call made from init(). It sets the textures once and stores them.</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)rebuildAndAddCrest:":{"name":"rebuildAndAddCrest(_:)","abstract":"<p>This will remove, rebuild, and readd the middle layer (HealthBars). Called when health is added or removed and the crop needs to be updated.</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)textureFromNodeWithNode::callback:":{"name":"textureFromNode(node:_:callback:)","abstract":"<p>Render cropped texture asynchornously for performance gains</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)getStringForCrestHealth:current:":{"name":"getStringForCrestHealth(_:current:)","abstract":"<p>Returns strings like 12health6, which will relate to the corresponding image</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)updateHealth":{"name":"updateHealth()","abstract":"<p>Updates the crop based on the current amount of units in the squad.</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)addHeraldryRingWithName:":{"name":"addHeraldryRing(name:)","abstract":"<p>Adds an outline of the heraldry as a child, so that we can grow, change color, pulse it to attract attention</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)snapToLeadersPosition":{"name":"snapToLeadersPosition()","abstract":"<p>Sets the desired position (leader) with saefty checks","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)moveToDesiredPositionWithBounds:":{"name":"moveToDesiredPositionWithBounds(_:)","abstract":"<p>During each frame update, make sure the crest is directly above the leaders icon. This behavior should change if the heraldry is off screen, or if the unit is in combat.</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)addTimerMask:":{"name":"addTimerMask(_:)","abstract":"<p>When spawning units, add a crop that indicates when they will wake up.</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)updateWithDeltaTime:":{"name":"update(deltaTime:)","abstract":"<p>If not engaged, update the position of the heraldry.</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)showSquadStateWithName:":{"name":"showSquadState(name:)","abstract":"<p>If the squad is in an important state, the heraldry will flash by alternating the main banner with the icon of the state. This is only for huge changes like","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)buttonTouchesBegan:withEvent:":{"name":"buttonTouchesBegan(_:withEvent:)","abstract":"<p>Required for button protocol</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)buttonTouchesEnded:withEvent:":{"name":"buttonTouchesEnded(_:withEvent:)","abstract":"<p>On touch end, call single touch callback, or pan to crest for double touch.</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)buttonTouchesCancelled:withEvent:":{"name":"buttonTouchesCancelled(_:withEvent:)","abstract":"<p>Required for button protocol</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/c:@M@FormationKit@objc(cs)FKHeraldryComponent(im)detectLongPress:":{"name":"detectLongPress(_:)","abstract":"<p>Long press to preview the move and rotate if desired.</p>","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/mouseDown(with:)":{"name":"mouseDown(with:)","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/mouseUp(with:)":{"name":"mouseUp(with:)","parent_name":"FKHeraldryComponent"},"Classes/FKHeraldryComponent.html#/rightMouseDown(with:)":{"name":"rightMouseDown(with:)","parent_name":"FKHeraldryComponent"},"Classes/FKGameplaySnapshot/TargetSnapshot.html#/s:12FormationKit18FKGameplaySnapshotC06TargetD0V7hasPathSbvp":{"name":"hasPath","abstract":"<p>Whether or not the targewt can be walked to</p>","parent_name":"TargetSnapshot"},"Classes/FKGameplaySnapshot/TargetSnapshot.html#/s:12FormationKit18FKGameplaySnapshotC06TargetD0V13totalDistanceSfvp":{"name":"totalDistance","abstract":"<p>Find length of GKPath</p>","parent_name":"TargetSnapshot"},"Classes/FKGameplaySnapshot/TargetSnapshot.html#/s:12FormationKit18FKGameplaySnapshotC06TargetD0V15distanceByNodesSfvp":{"name":"distanceByNodes","abstract":"<p>Total count of nodes</p>","parent_name":"TargetSnapshot"},"Classes/FKGameplaySnapshot/TargetSnapshot.html#/s:12FormationKit18FKGameplaySnapshotC06TargetD0V13distanceByAirSfvp":{"name":"distanceByAir","abstract":"<p>Direct line to target</p>","parent_name":"TargetSnapshot"},"Classes/FKGameplaySnapshot/TargetSnapshot.html#/s:12FormationKit18FKGameplaySnapshotC06TargetD0V19environmentObstacleSbvp":{"name":"environmentObstacle","abstract":"<p>Requires navigating around environment</p>","parent_name":"TargetSnapshot"},"Classes/FKGameplaySnapshot/TargetSnapshot.html#/s:12FormationKit18FKGameplaySnapshotC06TargetD0V16friendlyObstacleSbvp":{"name":"friendlyObstacle","abstract":"<p>Requires navigating through friendly</p>","parent_name":"TargetSnapshot"},"Classes/FKGameplaySnapshot/TargetSnapshot.html#/s:12FormationKit18FKGameplaySnapshotC06TargetD0V13enemyObstacleSbvp":{"name":"enemyObstacle","abstract":"<p>requires navigating through enemy</p>","parent_name":"TargetSnapshot"},"Classes/FKGameplaySnapshot.html#/s:12FormationKit18FKGameplaySnapshotC7targetss10DictionaryVyAA13FKSquadEntityCAC06TargetD0VGvp":{"name":"targets","abstract":"<p>List of all targets to consider</p>","parent_name":"FKGameplaySnapshot"},"Classes/FKGameplaySnapshot.html#/s:12FormationKit18FKGameplaySnapshotC7subjectSQyAA13FKSquadEntityCGvp":{"name":"subject","abstract":"<p>The squad making the decision</p>","parent_name":"FKGameplaySnapshot"},"Classes/FKGameplaySnapshot.html#/s:12FormationKit18FKGameplaySnapshotC6targetAA13FKSquadEntityCSgvp":{"name":"target","abstract":"<p>The current target to evaluate</p>","parent_name":"FKGameplaySnapshot"},"Classes/FKGameplaySnapshot.html#/s:12FormationKit18FKGameplaySnapshotC7abilityAA7AbilityCSgvp":{"name":"ability","abstract":"<p>The current ability to consider the decision against</p>","parent_name":"FKGameplaySnapshot"},"Classes/FKGameplaySnapshot/TargetSnapshot.html":{"name":"TargetSnapshot","abstract":"<p>Data for 1 specific target when evaluating ability rules. This essentially caches the data so that the rule system can iterate over an array","parent_name":"FKGameplaySnapshot"},"Classes/FKGameplaySnapshot.html#/s:12FormationKit18FKGameplaySnapshotC19allSquadsToEvaluateSayAA13FKSquadEntityCGyF":{"name":"allSquadsToEvaluate()","abstract":"<p>Switch between friendly and enemy targets based on squad type</p>","parent_name":"FKGameplaySnapshot"},"Classes/FKGameplaySnapshot.html#/s:12FormationKit18FKGameplaySnapshotC16findPathToTargetSo6GKPathC4path_SaySo13GKGraphNode2DCG5nodesSf0J4SizetSgAA13FKSquadEntityC6target_tF":{"name":"findPathToTarget(target:)","abstract":"<p>Uses the assigned navmesh to get walking path to target</p>","parent_name":"FKGameplaySnapshot"},"Classes/FKGameplaySnapshot.html#/s:12FormationKit18FKGameplaySnapshotC17findDistanceByAirSfAA13FKSquadEntityC6target_tF":{"name":"findDistanceByAir(target:)","abstract":"<p>Straight line between start and end position</p>","parent_name":"FKGameplaySnapshot"},"Classes/FKGameplaySnapshot.html#/s:12FormationKit18FKGameplaySnapshotC16findPathDistanceSfSaySo13GKGraphNode2DCG5nodes_tF":{"name":"findPathDistance(nodes:)","abstract":"<p>Loop over every node of the path and get total distance</p>","parent_name":"FKGameplaySnapshot"},"Classes/FKGameplaySnapshot.html#/s:12FormationKit18FKGameplaySnapshotC24findObstacleInterferenceSb11environment_Sb8friendlySb5enemytSaySo13GKGraphNode2DCG5nodes_So7SKSceneC5sceneAA13FKSquadEntityC6targettF":{"name":"findObstacleInterference(nodes:scene:target:)","abstract":"<p>Loop over each node and see if it hits obstacles</p>","parent_name":"FKGameplaySnapshot"},"Classes/FKEntitySpriteNode.html#/c:@M@FormationKit@objc(cs)FKEntitySpriteNode(py)entityHandle":{"name":"entityHandle","abstract":"<p>Character entity related to this sprite</p>","parent_name":"FKEntitySpriteNode"},"Classes/FKEntitySpriteNode.html#/c:@M@FormationKit@objc(cs)FKEntitySpriteNode(im)setCharacterEntity:":{"name":"setCharacterEntity(_:)","abstract":"<p>Set the character entity for this sprite node. Required for physcis to work properly</p>","parent_name":"FKEntitySpriteNode"},"Classes/FKDefendingState.html#/c:@M@FormationKit@objc(cs)FKDefendingState(im)initWithEntity:":{"name":"init(entity:)","abstract":"<p>Store entity as actual type for easier reference</p>","parent_name":"FKDefendingState"},"Classes/FKDefendingState.html#/c:@M@FormationKit@objc(cs)FKDefendingState(im)updateWithDeltaTime:":{"name":"update(deltaTime:)","abstract":"<p>Wait until attacker has reached defender, and then leave state</p>","parent_name":"FKDefendingState"},"Classes/FKDefendingState.html#/c:@M@FormationKit@objc(cs)FKDefendingState(im)shouldEngageTarget:":{"name":"shouldEngageTarget(_:)","abstract":"<p>Checks to make sure attacker has reached defender. At that point, it is safe to attack back.","parent_name":"FKDefendingState"},"Classes/FKCatchingUpState.html#/c:@M@FormationKit@objc(cs)FKCatchingUpState(im)moveTowardsDesiredPosition:":{"name":"moveTowardsDesiredPosition(_:)","abstract":"<p>Creates the MovementInstructions to execute the move.</p>","parent_name":"FKCatchingUpState"},"Classes/FKBlockedState.html#/c:@M@FormationKit@objc(cs)FKBlockedState(im)moveTowardsDesiredPosition:":{"name":"moveTowardsDesiredPosition(_:)","abstract":"<p>Creates the MovementInstructions to execute the move.</p>","parent_name":"FKBlockedState"},"Classes/FKBattleComponent.html#/c:@M@FormationKit@objc(cs)FKBattleComponent(py)target":{"name":"target","abstract":"<p>Current target that this squad is attacking / enaging</p>","parent_name":"FKBattleComponent"},"Classes/FKBattleComponent.html#/c:@M@FormationKit@objc(cs)FKBattleComponent(py)beingAttackedBy":{"name":"beingAttackedBy","abstract":"<p>List of all squads attacking this squad. Only includes squads actively engaged (FKEngagedState)","parent_name":"FKBattleComponent"},"Classes/FKBattleComponent.html#/c:@M@FormationKit@objc(cs)FKBattleComponent(py)modifiersApplied":{"name":"modifiersApplied","abstract":"<p>Basic way of tracking squad usage during combat. Each modifier applied thought CharacterEntity.CombatComponent will increment this by 1.","parent_name":"FKBattleComponent"},"Classes/FKBattleComponent.html#/c:@M@FormationKit@objc(cs)FKBattleComponent(im)beingEngagedBy:":{"name":"beingEngagedBy(_:)","abstract":"<p>Notified by another squad that they are about to engage. If no current target, this squad will be forced to stop what it is doing","parent_name":"FKBattleComponent"},"Classes/FKBattleComponent.html#/c:@M@FormationKit@objc(cs)FKBattleComponent(im)beingDisengagedBy:":{"name":"beingDisengagedBy(_:)","abstract":"<p>A squad currently engaged with this squad will send this notification</p>","parent_name":"FKBattleComponent"},"Classes/FKBattleComponent.html#/c:@M@FormationKit@objc(cs)FKBattleComponent(im)pickBestTarget":{"name":"pickBestTarget()","abstract":"<p>Checks against targets attacking this squad to see if there is someone that should be attacked</p>","parent_name":"FKBattleComponent"},"Classes/FKBattleComponent.html#/s:12FormationKit17FKBattleComponentC17directionOfTarget12CoreGraphics7CGFloatVSgyF":{"name":"directionOfTarget()","abstract":"<p>Useful to get direction of combat for units seeking, spelss cast in general direction, etc</p>","parent_name":"FKBattleComponent"},"Classes/FKBattleComponent.html#/s:12FormationKit17FKBattleComponentC15orderUnitToSeekyAA7AbilityCF":{"name":"orderUnitToSeek(_:)","abstract":"<p>Conistent location to orde runits when they should attack. Consolidates logic to this one function.</p>","parent_name":"FKBattleComponent"},"Classes/FKBattleComponent.html#/s:12FormationKit17FKBattleComponentC18orderUnitsToVolleyyAA7AbilityCF":{"name":"orderUnitsToVolley(_:)","abstract":"<p>Convenience function to tell all units in a squad to start volleying target with given ability.</p>","parent_name":"FKBattleComponent"},"Classes/FKBattleComponent.html#/c:@M@FormationKit@objc(cs)FKBattleComponent(im)resetTroopsToIdle":{"name":"resetTroopsToIdle()","abstract":"<p>Convenience to reset troops</p>","parent_name":"FKBattleComponent"},"Classes/FKBattleComponent.html#/c:@M@FormationKit@objc(cs)FKBattleComponent(im)currentHitPoints":{"name":"currentHitPoints()","abstract":"<p>Actual remaining hit points of all units combined</p>","parent_name":"FKBattleComponent"},"Classes/FKBattleComponent.html#/c:@M@FormationKit@objc(cs)FKBattleComponent(im)damageOutput":{"name":"damageOutput()","abstract":"<p>Attempt to calculate attack strength of a squad. For now, take the front row of the squad and multiply by damage</p>","parent_name":"FKBattleComponent"},"Classes/FKAttributesComponent.html#/s:12FormationKit21FKAttributesComponentC9AttributeO":{"name":"Attribute","abstract":"<p>Attributes that can be referenced and modified</p>","parent_name":"FKAttributesComponent"},"Classes/FKAttributesComponent.html#/s:12FormationKit21FKAttributesComponentC30adjustAttributeForModificationyAA8ModifierVF":{"name":"adjustAttributeForModification(_:)","abstract":"<p>When a modifiction is temporarily added, some attributes may need more complex changes to pull in the new value</p>","parent_name":"FKAttributesComponent"},"Classes/FKAttributesComponent.html#/s:12FormationKit21FKAttributesComponentC20setValueForAttributeyAC0H0O_yXl5valueAA8ModifierVSg8modifiertF":{"name":"setValueForAttribute(_:value:modifier:)","abstract":"<p>Permanently alter an attribute of the character. A temporary modifier would never call this, but -10 HP would via a .Instant modifier.","parent_name":"FKAttributesComponent"},"Classes/FKAttributesComponent.html#/s:12FormationKit21FKAttributesComponentC17valueForAttributeypSgAC0G0OF":{"name":"valueForAttribute(_:)","abstract":"<p>Return the value to use after looking at active modifiers on the character</p>","parent_name":"FKAttributesComponent"},"Classes/FKAttributesComponent.html#/c:@M@FormationKit@objc(cs)FKAttributesComponent(im)getWalkingSpeed":{"name":"getWalkingSpeed()","abstract":"<p>Return agent baseSpeed + any active modifiers.</p>","parent_name":"FKAttributesComponent"},"Classes/FKAttributesComponent.html#/c:@M@FormationKit@objc(cs)FKAttributesComponent(im)getStrength":{"name":"getStrength()","abstract":"<p>Return Combat.Strength + any active modifiers.</p>","parent_name":"FKAttributesComponent"},"Classes/FKAttributesComponent.html#/c:@M@FormationKit@objc(cs)FKAttributesComponent(im)getCurrentHealth":{"name":"getCurrentHealth()","abstract":"<p>Returns current hitpoints</p>","parent_name":"FKAttributesComponent"},"Classes/FKAttributesComponent.html#/c:@M@FormationKit@objc(cs)FKAttributesComponent(im)getHitPoints":{"name":"getHitPoints()","abstract":"<p>Returns hitpoints + any modifiers</p>","parent_name":"FKAttributesComponent"},"Classes/FKAttributesComponent.html#/c:@M@FormationKit@objc(cs)FKAttributesComponent(im)getMorale":{"name":"getMorale()","abstract":"<p>Returns morale + any modifiers</p>","parent_name":"FKAttributesComponent"},"Classes/FKAttributesComponent.html#/s:12FormationKit21FKAttributesComponentC22getAmountFromModifiersSfAC9AttributeOF":{"name":"getAmountFromModifiers(_:)","abstract":"<p>Loop over ModifiersComponent and look for any active modifiers affecting the Attribute in question.</p>","parent_name":"FKAttributesComponent"},"Classes/FKAttackComponent.html#/c:@M@FormationKit@objc(cs)FKAttackComponent(im)processAttack":{"name":"processAttack()","abstract":"<p>Entry point to call when you want an attack to occur</p>","parent_name":"FKAttackComponent"},"Classes/FKAttackComponent.html#/s:12FormationKit17FKAttackComponentC10faceTarget33_BA019ABC011B8376C2AF50063A65A2DFLLAA011FKAnimationD0C14AnimationStateOAA12FKUnitEntityC_AK6targetAA7AbilityC6attacktF":{"name":"faceTarget(_:target:attack:)","abstract":"<p>logged(<q>Prepping double attack from Attack Component. Time set to \\(self.lastAttackTime)</q>, file: #file)","parent_name":"FKAttackComponent"},"Classes/FKAttackComponent.html#/s:12FormationKit17FKAttackComponentC17animationHasBegun33_BA019ABC011B8376C2AF50063A65A2DFLLyAA12FKUnitEntityC_AA7AbilityC6attacktF":{"name":"animationHasBegun(_:attack:)","abstract":"<p>Handles the timing events asscoaited with the attack. Sound, damage, secondary effects, etc</p>","parent_name":"FKAttackComponent"},"Classes/FKAgendaFactory.html#/s:12FormationKit15FKAgendaFactoryC16factsByArchetypes10DictionaryVyAA13FKAIComponentC0G0OSayAH4FactOGGvp":{"name":"factsByArchetype","abstract":"<p>Which fact checks to run for each archetype</p>","parent_name":"FKAgendaFactory"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC16passiveAbilitiesSayAA7AbilityCGvp":{"name":"passiveAbilities","abstract":"<p>Holds abilities that can modify other abilities.</p>","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC14processOnSquadyAA7AbilityC7ability_AA13FKSquadEntityC6targetAI10originatorSC7CGPointV6origintF":{"name":"processOnSquad(ability:target:originator:origin:)","abstract":"<p>Entry point to apply a modifier to all units of a squad.","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC13processOnUnityAA7AbilityC7ability_AA12FKUnitEntityC6targetAA07FKSquadK0C10originatorSC7CGPointV6origintF":{"name":"processOnUnit(ability:target:originator:origin:)","abstract":"<p>This is the entry point for one squad attacking another unit.","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC13processOnUnityAA7AbilityC7ability_AA12FKUnitEntityC6targetAI10originatorSC7CGPointV6origintF":{"name":"processOnUnit(ability:target:originator:origin:)","abstract":"<p>This is the entry point for one unit attacking another unit.","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC23processModifiersOnSquadySayAA8ModifierVG9modifiers_AA13FKSquadEntityC6targetAJSg10originatorSC7CGPointV6origintF":{"name":"processModifiersOnSquad(modifiers:target:originator:origin:)","abstract":"<p>Convenience to bypass ability logic and directly apply a modifier to a squad. Example: Phoenix spell is based on timing. Each unit revives, and then casts an attack.","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC22processModifiersOnUnitySayAA8ModifierVG9modifiers_AA12FKUnitEntityC6targetAJSg10originatorSC7CGPointV6origintF":{"name":"processModifiersOnUnit(modifiers:target:originator:origin:)","abstract":"<p>Actually apply the modifiers to a unit.","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC13applyModifieryAA12FKUnitEntityC4unit_AA0F0V8modifiertF":{"name":"applyModifier(unit:modifier:)","abstract":"<p>The last step before the modifier is actually applied. Check to see if it should completely miss based on modifier.accuracy</p>","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC28handlePhysicalDamageModifieryAA0H0V8modifier_AA12FKUnitEntityC6targetAI10originatorSC7CGPointV6origintF":{"name":"handlePhysicalDamageModifier(modifier:target:originator:origin:)","abstract":"<p>If the modifier is an HP modifier, adjust the value based on Strength and Armor</p>","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC27unitWillDodgePhysicalAttackSbAA12FKUnitEntityC6target_tF":{"name":"unitWillDodgePhysicalAttack(target:)","abstract":"<p>Check agility and roll to see if the unit should dodge the attack</p>","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC23calculatePhysicalDamageAA8ModifierVAF14baseHPModifier_AA12FKUnitEntityC6targetAI10originatortF":{"name":"calculatePhysicalDamage(baseHPModifier:target:originator:)","abstract":"<p>Adjusted value takes Strength / Armor. 90 / 100 = 0.9 &ndash; Base Damage = -10. So, higher armor would only take 90% of the damage.","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC29handleElementalDamageModifieryAA0H0V8modifier_AA12FKUnitEntityC6targetSC7CGPointV6origintF":{"name":"handleElementalDamageModifier(modifier:target:origin:)","abstract":"<p>If the modifier is elemental, see how it should be absorbed or magnified based on unit stats</p>","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC24calculateElementalDamageAA8ModifierVAF04baseH0_AA12FKUnitEntityC6targettF":{"name":"calculateElementalDamage(baseModifier:target:)","abstract":"<p>All elemental modifications (Str, HP, etc) go through this. Everything has a chance to be partially resisted</p>","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC20handleStatusModifieryAA0G0V8modifier_AA12FKUnitEntityC6targetAISg10originatorSC7CGPointV6origintF":{"name":"handleStatusModifier(modifier:target:originator:origin:)","abstract":"<p>If the modifier is status, it just gets applied or resisted</p>","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC24getSquadAbilityModifiersSayAA8ModifierVGSgAA13FKSquadEntityC_AA0G0C7abilityAF6TargetO6targettF":{"name":"getSquadAbilityModifiers(_:ability:target:)","abstract":"<p>Loop over each modifier for an ability and filter by target. Then, if the squad has ability modifiers (i.e.: +5 STR to Charge)","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC27updateExistingOrAddModifierSayAA0I0VGAG9modifiers_AF12modificationtF":{"name":"updateExistingOrAddModifier(modifiers:modification:)","abstract":"<p>Logic to update an existing modifier or add a new one to an array of modifiers</p>","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC31adjustModifierForIndestructableAA0F0VAF8modifier_AA12FKUnitEntityC4unittF":{"name":"adjustModifierForIndestructable(modifier:unit:)","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Look</span> <span class=\"n\">at</span> <span class=\"n\">passive</span> <span class=\"n\">abilities</span> <span class=\"n\">array</span> <span class=\"k\">for</span> <span class=\"n\">any</span> <span class=\"n\">ability</span><span class=\"o\">.</span> <span class=\"kt\">For</span> <span class=\"n\">example</span><span class=\"p\">,</span> <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"n\">passive</span> <span class=\"k\">is</span> <span class=\"o\">+</span><span class=\"mi\">10</span><span class=\"o\">%</span> <span class=\"n\">armor</span> <span class=\"n\">to</span> <span class=\"n\">all</span> <span class=\"n\">units</span> <span class=\"n\">instead</span> <span class=\"n\">of</span> <span class=\"n\">loop</span> <span class=\"n\">every</span> <span class=\"n\">unit</span> <span class=\"n\">and</span> <span class=\"n\">applying</span> <span class=\"n\">the</span> <span class=\"n\">modifier</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">unit</span>","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesService.html#/s:12FormationKit18FKAbilitiesServiceC30getAbilitiesCurrentlyAffectingSayAA7AbilityCG_s10DictionaryVySSSiGtSgAA13FKSquadEntityC5squad_tF":{"name":"getAbilitiesCurrentlyAffecting(squad:)","abstract":"<li>DONE: Check modifiers on units and roll them up based on ability</li>","parent_name":"FKAbilitiesService"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC9abilitiesSayAC13ActiveAbilityVGvp":{"name":"abilities","abstract":"<p>All abilitites that this squad has. String is the unique identifier for the ability</p>","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC16abilityModifierss10DictionaryVySSSayAA8ModifierVGGvp":{"name":"abilityModifiers","abstract":"<p>Added modifiers specific to this squad. For example, two squads may have the Attack ability, but one should do more damage.</p>","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC13unitModifiersSayAA8ModifierVGvp":{"name":"unitModifiers","abstract":"<p>Stores unit modifiers to add to indiviual units. Example would be a level 2 squad adding +5 str. Each unit needs to get the modifier.","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/c:@M@FormationKit@objc(cs)FKAbilitiesComponent(py)cooldowns":{"name":"cooldowns","abstract":"<p>Temporary holding for any ability that is cooling down. String is the unique identifier for the ability</p>","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC11activeSpellAA7FKSpellCSgvp":{"name":"activeSpell","abstract":"<p>Handle on the last cast spell. Used to update it each frame</p>","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC13ActiveAbilityV":{"name":"ActiveAbility","abstract":"<p>This is a small subset of the unlocked abilities, and is all the is needed for a squad to function. Use full ExperienceService","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC10runAbilityAA9FKCommandCSgAA0F0C_AA19CommandInstructionsV12instructionstF":{"name":"runAbility(_:instructions:)","abstract":"<p>Abilitites are either instant or need to be queued. This will handle that split appropriately","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC14processCommandyAA9FKCommandCF":{"name":"processCommand(_:)","abstract":"<p>When a command is not sent to queue, just process it here instead</p>","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC16shouldAddToQueueSbAA7AbilityCF":{"name":"shouldAddToQueue(_:)","abstract":"<p>Specify which behaviors are queued.</p>","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC11addCooldownyAA7AbilityCF":{"name":"addCooldown(_:)","abstract":"<p>After an ability has been run, call this to add it to the cooldown container</p>","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC19getSceneFromCommandSo7SKSceneCSgAA9FKCommandCF":{"name":"getSceneFromCommand(_:)","abstract":"<p>Based on where the ability is coming from, we don&rsquo;t alwyas reference the scene in the same way. This will help that lookup process.</p>","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC21applyModifiersToSquadyAA7AbilityCF":{"name":"applyModifiersToSquad(_:)","abstract":"<p>When abilities have modifiers that go to every unit on the squad, the ability can look here for helper functions in applying those modifiers","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/c:@M@FormationKit@objc(cs)FKAbilitiesComponent(im)updateWithDeltaTime:":{"name":"update(deltaTime:)","abstract":"<p>Main goal during update is to keep track of cooldowns.</p>","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC23getDefaultCombatAbilityAA0H0CSgyF":{"name":"getDefaultCombatAbility()","abstract":"<p>Convenient accessor for things like AI to execute a default attack. Normally, the user triggers abilities through","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC15addUnitModifieryAA0G0V8modifier_tF":{"name":"addUnitModifier(modifier:)","abstract":"<p>Add to our storage of all unt modifiers. If units already exist in squad, apply the modifier to each existing unit.","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/c:@M@FormationKit@objc(cs)FKAbilitiesComponent(im)addAllUnitModifiersToUnitWithUnit:":{"name":"addAllUnitModifiersToUnit(unit:)","abstract":"<p>When a new unit joins the squad, add all modifiers</p>","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC21addModifierToAllUnitsyAA0F0V8modifier_tF":{"name":"addModifierToAllUnits(modifier:)","abstract":"<p>When a new modifier is added to an existing squad, give it to all units</p>","parent_name":"FKAbilitiesComponent"},"Classes/FKAbilitiesComponent.html#/s:12FormationKit20FKAbilitiesComponentC20applyModifierToSquadySayAA0F0VGF":{"name":"applyModifierToSquad(_:)","abstract":"<p>Persuit uses this, so fix that before removing completely.</p>","parent_name":"FKAbilitiesComponent"},"Classes/EngagedWithFriendRule.html#/c:@M@FormationKit@objc(cs)EngagedWithFriendRule(im)getFriendlySquads":{"name":"getFriendlySquads()","abstract":"<p>Main call to get targets that the AI should consider</p>","parent_name":"EngagedWithFriendRule"},"Classes/DistanceToTargetRule.html#/c:@M@FormationKit@objc(cs)DistanceToTargetRule(py)maxDistance":{"name":"maxDistance","abstract":"<p>Max distance tyo count as a negative</p>","parent_name":"DistanceToTargetRule"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC14sharedInstanceACvpZ":{"name":"sharedInstance","abstract":"<p>Instance of the factory.</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC18createInstructionsAA0cF0VAA7AbilityC_AA13FKSquadEntityC5squadAJSg6targetSC7CGPointVSg8positiontF":{"name":"createInstructions(_:squad:target:position:)","abstract":"<p>Helper function to create minimum requirement instructions for a given ability</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC06createC0AA9FKCommandCSgAA13FKSquadEntityC_AA7AbilityC7abilityAA0C12InstructionsV12instructionstF":{"name":"createCommand(_:ability:instructions:)","abstract":"<p>Forces validity of commands. All commands should be created through this function</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC14commandIsValidSbAA13FKSquadEntityC_AA7AbilityC7abilityAA0C12InstructionsV12instructionstF":{"name":"commandIsValid(_:ability:instructions:)","abstract":"<p>Returns true or false and branches validty based on ability type.</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC12validateMoveSbAA13FKSquadEntityC_AA7AbilityC7abilityAA0C12InstructionsV12instructionstF":{"name":"validateMove(_:ability:instructions:)","abstract":"<p>Entry point for move validation</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC19movePositionIsValidSbAA13FKSquadEntityC_AA0C12InstructionsV12instructionstF":{"name":"movePositionIsValid(_:instructions:)","abstract":"<p>Checks against the navmesh to see if the point is on the map.</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC9isInRangeSbAA13FKSquadEntityC_AA7AbilityC7abilityAA0C12InstructionsV12instructionstF":{"name":"isInRange(_:ability:instructions:)","abstract":"<p>Checks to see if a target is within range of the ability</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC15validateInstantSbAA13FKSquadEntityC_AA7AbilityC7abilityAA0C12InstructionsV12instructionstF":{"name":"validateInstant(_:ability:instructions:)","abstract":"<p>Currently no criteria for invalidating instant","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC11validateAoESbAA13FKSquadEntityC_AA7AbilityC7abilityAA0C12InstructionsV12instructionstF":{"name":"validateAoE(_:ability:instructions:)","abstract":"<p>Currently no criteria for invalidating AoE</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC13isCoolingDownSbAA13FKSquadEntityC_AA7AbilityC7abilitytF":{"name":"isCoolingDown(_:ability:)","abstract":"<p>Checks against a squads ability component to see if an ability is currently in cooldown mode.</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC23timeRemainingOnCooldownSdAA13FKSquadEntityC_AA7AbilityC7abilitytF":{"name":"timeRemainingOnCooldown(_:ability:)","abstract":"<p>Convenience method to find out ho wmuch time remaining before an ability  is available again.</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC08checkAllC11ValidationsSbAA13FKSquadEntityC_AA7AbilityC7abilityAA0C12InstructionsVSg12instructionstF":{"name":"checkAllCommandValidations(_:ability:instructions:)","abstract":"<p>Checks if a command is valid based on state / world criteria. Does not care about instructions or other information.","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC7isDyingSbAA13FKSquadEntityC_AA7AbilityC7abilitytF":{"name":"isDying(_:ability:)","abstract":"<p>Checks if the squad or hero using the ability is alive. Catches edges cases where the user selects something and the unit","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC8isMovingSbAA13FKSquadEntityCF":{"name":"isMoving(_:)","abstract":"<p>Moving is specific to the move ability. If the squad is moving on the map, but in the engaging state, that does not qualify for this condition.</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC11isNotMovingSbAA13FKSquadEntityCF":{"name":"isNotMoving(_:)","abstract":"<p>Moving is specific to the move ability. If the squad is moving on the map, but in the engaging state, that does not qualify for this condition.</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC10isInCombatSbAA13FKSquadEntityCF":{"name":"isInCombat(_:)","abstract":"<p>Implement this</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC13isNotInCombatSbAA13FKSquadEntityCF":{"name":"isNotInCombat(_:)","abstract":"<p>Based on the engaged state.</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC16targetIsInCombatSbAA13FKSquadEntityCF":{"name":"targetIsInCombat(_:)","abstract":"<p>Technically validates as targetHasATarget</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC10isEngagingSbAA13FKSquadEntityCF":{"name":"isEngaging(_:)","abstract":"<p>A squad has a target and is walking to it, but hasn&rsquo;t started attacking it yet.</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC20engagedTargetInRangeSbAA13FKSquadEntityC_AA7AbilityC14ValidationDataV10validationtF":{"name":"engagedTargetInRange(_:validation:)","abstract":"<p>Looks at the target (assuming there is one) and returns true if in range</p>","parent_name":"CommandFactory"},"Classes/CommandFactory.html#/s:12FormationKit14CommandFactoryC9isEngagedSbAA13FKSquadEntityCF":{"name":"isEngaged(_:)","abstract":"<p>A squad is in melee combat</p>","parent_name":"CommandFactory"},"Classes/FKCommand.html#/s:12FormationKit9FKCommandC7abilityAA7AbilityCvp":{"name":"ability","abstract":"<p>An ability to perform when command is processed.</p>","parent_name":"FKCommand"},"Classes/FKCommand.html#/s:12FormationKit9FKCommandC12instructionsAA19CommandInstructionsVvp":{"name":"instructions","abstract":"<p>Details about where to perform the ability.</p>","parent_name":"FKCommand"},"Classes/FKCommand.html#/s:12FormationKit9FKCommandC8blockingSbvp":{"name":"blocking","abstract":"<p>Can this command be cancelled or move in the queue</p>","parent_name":"FKCommand"},"Classes/FKCommand.html#/s:12FormationKit9FKCommandC8callbackyycvp":{"name":"callback","abstract":"<p>What to call when command is finished executing</p>","parent_name":"FKCommand"},"Classes/FKCommand.html#/s:12FormationKit9FKCommandC9completedSbvp":{"name":"completed","abstract":"<p>Simple flag for completed in case any code stores reference to this command.","parent_name":"FKCommand"},"Classes/FKCommand.html#/s:12FormationKit9FKCommandCAcA7AbilityC7ability_AA19CommandInstructionsV12instructionstcfc":{"name":"init(ability:instructions:)","abstract":"<p>Init with the two required settings.</p>","parent_name":"FKCommand"},"Classes/FKCommand.html#/s:12FormationKit9FKCommandC15markAsCompletedyyF":{"name":"markAsCompleted()","abstract":"<p>Call from the queue when processing is complete.</p>","parent_name":"FKCommand"},"Classes/FKCommand.html#/s:s9EquatableP2eeoiSbx_xtFZ":{"name":"==(_:_:)","parent_name":"FKCommand"},"Classes/Ability.html#/s:12FormationKit7AbilityC4nameSSvp":{"name":"name","abstract":"<p>The name of the ability will serve as the unique identifer</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC8behaviorAC8BehaviorOvp":{"name":"behavior","abstract":"<p>The type of ability based on the enum of options</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC9specialtyAC9SpecialtyOSgvp":{"name":"specialty","abstract":"<p>The type of sepcial hero move based on the enum of options</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC8iconNameSSSgvp":{"name":"iconName","abstract":"<p>The texture name of the icon to show in the action bar</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC8iconDescSSSgvp":{"name":"iconDesc","abstract":"<p>The text name to show in the action bar, or other areas referencing the ability</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC12hudIndicatorSSSgvp":{"name":"hudIndicator","abstract":"<p>When triggered, place a texture with this name on the HUD until the ability is finished</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC9modifiersSayAA8ModifierVGSgvp":{"name":"modifiers","abstract":"<p>The modifier for the ability. For example, sprint might have a +speed modifier</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC10validationSayAC14ValidationDataVGSgvp":{"name":"validation","abstract":"<p>Array of criteria that needs to be met for the ability to be used</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC8cooldownSdSgvp":{"name":"cooldown","abstract":"<p>Duration to wait before ability can be used again</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC17delayBetweenUsageSdSgvp":{"name":"delayBetweenUsage","abstract":"<p>Where cooldown applies to general squad usage, this variable applies to abilities on loop. For example, melee attack would have a delay between each attack even though the global attack ability is in use.</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC5rangeSdSgvp":{"name":"range","abstract":"<p>Range for this ability to be used.</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC9targetingAC9TargetingOvp":{"name":"targeting","abstract":"<p>Who can the ability be used on. Defaults to enemy.</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC10projectileAA10ProjectileCSgvp":{"name":"projectile","abstract":"<p>Asset to use for projectile based abilities</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC17animationKeyFrontSiSgvp":{"name":"animationKeyFront","abstract":"<p>If this ability has a character animation, link to this key (character animations are all store din same atlas and cached on character object)</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC16animationKeyBackSiSgvp":{"name":"animationKeyBack","abstract":"<p>If this ability has a character animation, link to this key (character animations are all store din same atlas and cached on character object)</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC21animationTriggerPointSdSgvp":{"name":"animationTriggerPoint","abstract":"<p>The key time in an animation to trigger an event (damage, or projctile being fired, etc)</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC6soundss10DictionaryVyAC9SoundMarkOSSGvp":{"name":"sounds","abstract":"<p>Abilities can have multiple sounds. This dictionary holds the timing and sound groupings. Each grouping can reference multiple variations of a sound.</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC9particless10DictionaryVyAC9SoundMarkOSSGvp":{"name":"particles","abstract":"<p>Abilities can have multiple particles. This dictionary holds the timing and particle. Uses Ability.SoundMark because that should be refactored to Ability.TimingMark</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC8accuracySiSgvp":{"name":"accuracy","abstract":"<p>Roles of 1 - 10 are done when executing the ability if this is set. Currently only works for projectiles.","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC10ownerSqaudAA13FKSquadEntityCSgvp":{"name":"ownerSqaud","abstract":"<p>Reference back to the squad using this ability. Imagine a bolt shoots across the scene, and does DoT damager for 10 seconds. The ability is long gone, but each modifier can track back to it&rsquo;s parent ability, which here can track back to the squad that cast it</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityCACSS4name_AC8BehaviorO8behaviortcfc":{"name":"init(name:behavior:)","abstract":"<p>To create an Ability, add a new entry to the Abilities.pList file. You can see other entries for reference, or look at the member variables of this class to use as keys. When adding an entry, a <a href=\"/Classes/Ability/Behavior.html\">Behavior</a> has to be selected. Also, consider what sort of Modifier to add as <strong>Instant</strong>, <strong>Spell</strong>, and potentially other abilities may do nothing without a modifier.</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC8BehaviorO":{"name":"Behavior","abstract":"<p>Hard coded options for how an ability can behave. Used across the entire code base.</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC9SpecialtyO":{"name":"Specialty","abstract":"<p>Hard coded options for hero abilities &ndash; defines which special feature to use</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC10ValidationO":{"name":"Validation","abstract":"<p>Ability can only be used if the Validation criteria is met.</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC14ValidationDataV":{"name":"ValidationData","abstract":"<p>Validation can get complex as this goes on. By storing each validation object in a struct, we can build out variable criteria like engaging, but within range of engaged target","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC9TargetingO":{"name":"Targeting","abstract":"<p>Used by UI and AI to determine what targets are valid</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC9SoundMarkO":{"name":"SoundMark","abstract":"<p>Each ability will register different timing marks depending on .Behavior</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC6getDPSSfyF":{"name":"getDPS()","abstract":"<p>Look for hitpoint modifiers to get damage potential</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC11factoryInitACSSFZ":{"name":"factoryInit(_:)","abstract":"<p>Main public entry point for loading a new ability.</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC13loadModifiersSayAA8ModifierVGSgSo12NSDictionaryC_SS4nameACSg9appliedBytFZ":{"name":"loadModifiers(_:name:appliedBy:)","abstract":"<p>If a Modifier is present in the pList, this will loop through and create modifier objects and assign them to the Ability.</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC12loadModifierAA0E0VSo12NSDictionaryC_SS4nameACSg9appliedBytFZ":{"name":"loadModifier(_:name:appliedBy:)","abstract":"<p>Breaks out logic from the loop in loadModifiers so that other portions of codebase can use if necessary</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC14loadValidationSayAC0E4DataVGSgSo12NSDictionaryCFZ":{"name":"loadValidation(_:)","abstract":"<p>If Validation is present in the pList, this will loop through and create CommandValidation objects and assign them to the Ability.</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC13loadTargetingAC0E0OSo12NSDictionaryCFZ":{"name":"loadTargeting(_:)","abstract":"<p>If targeting is present in the pList, this will loop through and create Targeting objects and assign them to the Ability.</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC13loadAnimationySo12NSDictionaryC_AC7abilitytFZ":{"name":"loadAnimation(_:ability:)","abstract":"<p>If an animation is associated with the ability, load the settings</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC14loadProjectileAA0E0CSgSo12NSDictionaryCFZ":{"name":"loadProjectile(_:)","abstract":"<p>Set projectile if it exists in dataset</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC10loadSoundsySo12NSDictionaryC_AC7abilitytFZ":{"name":"loadSounds(_:ability:)","abstract":"<p>Loops through data and finds all sound marks. Creates soundgroups out of those marks. Adds group to PBSound usinf filename as key. Locally stores filename as key as well. When sounds need to be played, key will be used to trigger</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC13loadParticlesySo12NSDictionaryC_AC7abilitytFZ":{"name":"loadParticles(_:ability:)","abstract":"<p>Loops through data and finds all sound marks. Creates soundgroups out of those marks. Adds group to PBSound usinf filename as key. Locally stores filename as key as well. When sounds need to be played, key will be used to trigger</p>","parent_name":"Ability"},"Classes/Ability.html#/s:12FormationKit7AbilityC13loadPListDataSo12NSDictionaryCSSFZ":{"name":"loadPListData(_:)","abstract":"<p>Load the raw file as a dictionary</p>","parent_name":"Ability"},"Classes/Ability.html":{"name":"Ability","abstract":"<p>Every action, command, spell, buff, etc comes down to an Ability. This class mainly serves as a container for the data while other portions of the code make the magic happen. Let&rsquo;s go over some terminology which shows the ways an Ability may interact with other portions of the code.</p>"},"Classes/FKCommand.html":{"name":"FKCommand","abstract":"<p>Light object to place in queue. Ability contains action, and instructions contains specifics like destination.</p>"},"Classes/CommandFactory.html":{"name":"CommandFactory","abstract":"<p>Helps create commands. In particular, validates them before creating them. For example, move command can only be issued if the destination is valid."},"Classes/DistanceToTargetRule.html":{"name":"DistanceToTargetRule","abstract":"<p>Distance is one of the main scores. Max distance to be held agasint a unit is ~1500. Normalize all of that to a scoring system of 0-100."},"Classes/EngagedWithFriendRule.html":{"name":"EngagedWithFriendRule","abstract":"<p>Goal of this score is to determine what to do if a friend is already attacking the target. Normally, this would mean choose a nearby target if there is one."},"Classes/FKAbilitiesComponent.html":{"name":"FKAbilitiesComponent","abstract":"<p>Manage abilities of a squad. Determines what shows on action bar, what is used for AI checks, etc."},"Classes/FKAbilitiesService.html":{"name":"FKAbilitiesService","abstract":"<p>TODO</p>"},"Classes/FKAgendaFactory.html":{"name":"FKAgendaFactory","abstract":"<p>Return an array of GKGoals for each AIComponent to execute. For example, Melee units won&rsquo;t care if a target is in range while Ranged units will be given a bonus"},"Classes/FKAttackComponent.html":{"name":"FKAttackComponent","abstract":"<p>Definition of attack would be playing an animation and then sending modifiers to a target (friendly or enemy).</p>"},"Other Classes.html#/c:@M@FormationKit@objc(cs)FKAttackingState":{"name":"FKAttackingState","abstract":"<p>Empty state to play when death animtion is running.</p>"},"Classes/FKAttributesComponent.html":{"name":"FKAttributesComponent","abstract":"<p>The goal of this component is to act as a gateway for all character attributes. Anything changed, read, or altered over time should be accessed from here.</p>"},"Classes/FKBattleComponent.html":{"name":"FKBattleComponent","abstract":"<p>Handles squad combat (engage, disengage, pick target, order units)</p>"},"Classes/FKBlockedState.html":{"name":"FKBlockedState","abstract":"<p>A unit will go into follow state on its own if out of position, or might be ordered by a squad. Following will just attempt to keep up with the desired standing position.</p>"},"Other Classes.html#/s:12FormationKit14FKCacheServiceC":{"name":"FKCacheService","abstract":"<p>A convenient service that can be used by any class in this framework to cache objects. By confirming to NSCache, memory shortages can be gracefully handled.</p>"},"Classes/FKCatchingUpState.html":{"name":"FKCatchingUpState","abstract":"<p>A unit will go into follow state on its own if out of position, or might be ordered by a squad. Following will just attempt to keep up with the desired standing position.</p>"},"Classes/FKDefendingState.html":{"name":"FKDefendingState","abstract":"<p>The purpose of this state is to wait while being attacked by a Melee unit for the first time. When engaged, this state will trigger, which causes the defender to stop moving and wait."},"Classes/FKEntitySpriteNode.html":{"name":"FKEntitySpriteNode","abstract":"<p>Spritekit physcis contacts only contain informaiton about the node in contact, and not the entity. Because of this, we need this empty class to store the node / entity"},"Classes/FKGameplaySnapshot.html":{"name":"FKGameplaySnapshot","abstract":"<p>to make an informed decision. IMPORTANT: This only calculates expensive information like pathfinding. Each fuzzy rule still has local checks like isTargetLowHealth</p>"},"Classes/FKHeraldryComponent.html":{"name":"FKHeraldryComponent","abstract":"<p>The icon that sits on top of the leader of a squad represents the HeraldryComponent. Primary features are:</p>"},"Classes/FKHeroComponent.html":{"name":"FKHeroComponent","abstract":"<p>This component can control logic specific to heros. Not behavior / AI logic, but instead data like where the hero"},"Classes/FKHeroEntity.html":{"name":"FKHeroEntity","abstract":"<p>It is likely that heros will have a lot of custom logic. To start, they will have additional components. Beyond that, the may have conditional AI, or separate states added to determine when they should act like any unit, and when they should run their own abilities. For those reasons, we can extend FKUnitEntity.</p>"},"Other Classes.html#/c:@M@FormationKit@objc(cs)FKLungeState":{"name":"FKLungeState","abstract":"<p>Special state for hero moves where the heor needs to do a melee attack. If target is not in melee range, hero will move towards target as the animaiton is playing out. Physics shouldnt get in the way.</p>"},"Classes/FKModifierComponent.html":{"name":"FKModifierComponent","abstract":"<p>Goal is to store all active modifiers. If a modifier is permanent, it will call AttributesComponenet to adjust the value. If temporary, it will just hold on to the modifier."},"Classes/FKMoraleComponent.html":{"name":"FKMoraleComponent","abstract":"<p>Morale is a very specific attribute and has a ton of edge cases, so this component will handle that logic. Big concerns are:</p>"},"Classes/FKMovingState.html":{"name":"FKMovingState","abstract":"<p>Goal of this state is to process any pending movement abilities.</p>"},"Classes/FKObjectPoolService.html":{"name":"FKObjectPoolService","abstract":"<p>Handles reuse of objects to improve performance</p>"},"Classes/FKOrderService.html":{"name":"FKOrderService","abstract":"<p>This factory should interpret the AI grades and return the proper ability and instructions to run."},"Classes/FKPhysicsComponent.html":{"name":"FKPhysicsComponent","abstract":"<p>Stores current physics states, and allows changing of states.</p>"},"Classes/FKPhysicsService.html":{"name":"FKPhysicsService","abstract":"<p>Handles all physics contacts, defines groupings and relationships, etc"},"Other Classes.html#/s:12FormationKit19FKProjectileFactoryC":{"name":"FKProjectileFactory","abstract":"<p>Aids in the construction / copying of projectiles. For performance, units hold on to projectile details, but not assets. This class will map a units porjectile string to a projectiel object, and pull the appropriate assets from the Object Pool.</p>"},"Classes/FKQueueComponent.html":{"name":"FKQueueComponent","abstract":"<p>This stores active commands for squad entities. We can expand this to add blocking commands, delayed commands, etc."},"Classes/FKSeekingState.html":{"name":"FKSeekingState","abstract":"<p>A unit will go into this when walking towards a target. Or, if no target but squad is engaged, try to find a valid target.</p>"},"Other Classes.html#/c:@M@FormationKit@objc(cs)FKSharedAttributesComponent":{"name":"FKSharedAttributesComponent","abstract":"<p>Example: Squad casting time, which is stored in abilities component. Flow is:</p>"},"Other Classes.html#/s:12FormationKit14FKSpellFactoryC":{"name":"FKSpellFactory","abstract":"<p>Aids in the construction of spells. Each spell will be a custom subclass, or use the default ability. In theory, this will allow developers to add spells to the array for custom behavior.</p>"},"Classes/FKTargetingFactory.html":{"name":"FKTargetingFactory","abstract":"<p>Return an array of squads that are available to target. This is a <q>pre</q> AI step, which has two main benefits:"},"Classes/FKTriangleFormation.html":{"name":"FKTriangleFormation","abstract":"<p>Place units in a triangle with a set amount of columns. Organizes priority from center out."},"Other Classes.html#/c:@M@FormationKit@objc(cs)FKVolleyingState":{"name":"FKVolleyingState","abstract":"<p>Once the squad is close enough to engage, the individual units will seek out their target.</p>"},"Other Classes.html#/c:@M@FormationKit@objc(cs)FriendlyFireRule":{"name":"FriendlyFireRule","abstract":"<p>The goal of this rule is to check if engaging would result in friendly fire. If so, lean heavily towards another target. Only try to fire if"},"Other Classes.html#/c:@M@FormationKit@objc(cs)HighThreatRule":{"name":"HighThreatRule","abstract":"<p>Goal of this rule is to sway AI to fight higher threat targets. For example, if a Melee can choose between another Melee or a Ranged and both are about equal distance,"},"Other Classes.html#/c:@M@FormationKit@objc(cs)LikelyToWinRule":{"name":"LikelyToWinRule","abstract":"<p>Goal of this rule is to attack targets you&rsquo;re more likely to defeat. Simple version is to check total squad health against subject squads damaage"},"Other Classes.html#/c:@M@FormationKit@objc(cs)ObstacleInterferenceRule":{"name":"ObstacleInterferenceRule","abstract":"<p>The goal of this rule is to check for obstacles. If engaging results in movement around the environment, there is a small penalty. If moving through"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC9cacheKeys33_1AC31AA341621C78E8CD28964FE693E5LLSaySSGvp":{"name":"cacheKeys","abstract":"<p>Store all keys used (they will be dynamic&hellip;squad names, etc). Delete when needed</p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC14sharedInstanceACvpZ":{"name":"sharedInstance","abstract":"<p>Handle on shared factory object</p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC10createUnitAA0C6EntityCSgAA07FKSquadD0C0H12ConstructionVF":{"name":"createUnit(_:)","abstract":"<p>Main entry point for creating units</p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC10createHeroAA12FKHeroEntityCSgAA07FKSquadD0C0I12ConstructionVF":{"name":"createHero(_:)","abstract":"<p>Main entry point for creating a hero</p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC15loadAllUnitDatayAA0C6EntityC_So12NSDictionaryC4dataAA07FKSquadD0C0L12ConstructionV12constructiontF":{"name":"loadAllUnitData(_:data:construction:)","abstract":"<p>Shared construction between heros and normal units</p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC17loadAllAnimationsyAA0C6EntityC_So12NSDictionaryC4dataAA07FKSquadD0C0K12ConstructionV12constructiontF":{"name":"loadAllAnimations(_:data:construction:)","abstract":"<p>Load standard animations for units.</p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC13loadAnimationAA20FKAnimationComponentC0F0CSS_AA07FKSquadD0C0I12ConstructionV12constructionSo12NSDictionaryC4dataSb12shouldRepeattF":{"name":"loadAnimation(_:construction:data:shouldRepeat:)","abstract":"<p>Specifically load one animation from the key / value pairs in pList and turn it into an Animation struct.</p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC18addAbilitiesToHero33_1AC31AA341621C78E8CD28964FE693E5LLyAA12FKHeroEntityC_AA07FKSquadD0C0R12ConstructionV12constructiontF":{"name":"addAbilitiesToHero(_:construction:)","abstract":"<p>Assign the given abilities to the hero</p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC14addUnitToSceneyAA0C6EntityCF":{"name":"addUnitToScene(_:)","abstract":"<p>By adding a unit to a scene we&rsquo;re inferring that it should be added to the component systems as well</p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC24addUnitToComponentSystem33_1AC31AA341621C78E8CD28964FE693E5LLyAA0C6EntityCF":{"name":"addUnitToComponentSystem(_:)","abstract":"<p>Add units to component system</p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC16componentSystemsSaySo17GKComponentSystemCySo0G0CGGvp":{"name":"componentSystems","abstract":"<p>Components must be run in this order for the units to function / update in game</p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC5resetyyF":{"name":"reset()","abstract":"<p>Call this when beginning and ending levels to safely cleanup everything</p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryC13loadPListDataSo12NSDictionaryCSgSSF":{"name":"loadPListData(_:)","abstract":"<p>Simply loads the pList. Expects all files to be named like <q>Melee1Info.plist</q></p>","parent_name":"FKUnitFactory"},"Classes/FKUnitFactory.html#/s:12FormationKit13FKUnitFactoryCfd":{"name":"deinit","abstract":"<p>Remove cache when destroyed</p>","parent_name":"FKUnitFactory"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV4nameSSvp":{"name":"name","abstract":"<p>The name of the squad. Must correspond with the file name. <q>Melee1Info.plist</q> would have a name of <q>Melee1</q></p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV12currentUnitsSivp":{"name":"currentUnits","abstract":"<p>How many units are alive</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV8maxUnitsSivp":{"name":"maxUnits","abstract":"<p>Max capacity of squad</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV8positionSC7CGPointVvp":{"name":"position","abstract":"<p>Position relative to scene node the squad will be placed on</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV7headingSfvp":{"name":"heading","abstract":"<p>Direction the squad should be facing</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV10controllerAA0C6EntityC10ControllerOvp":{"name":"controller","abstract":"<p>If this squad is controlled by a player or the computer</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV5sceneSo7SKSceneCSgXwvp":{"name":"scene","abstract":"<p>Game scene the squad was created on. Reference needed for agent positioning</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV5layerSo6SKNodeCSgXwvp":{"name":"layer","abstract":"<p>Layer within the scene the sqaud should live on. Also used for positioning</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV7uiLayerSo6SKNodeCSgXwvp":{"name":"uiLayer","abstract":"<p>Layer within the scene that ui elements should live on. Also used for positioning</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV9formationAA20FKFormationComponentC11ArrangementOvp":{"name":"formation","abstract":"<p>How the units should be arranged</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV7columnsSivp":{"name":"columns","abstract":"<p>Each strategy will read this differently, but generally describes width of formation</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV7spacingSivp":{"name":"spacing","abstract":"<p>Spacing between units</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV12physicsStateAA16FKPhysicsServiceC011UnitPhysicsG0Ovp":{"name":"physicsState","abstract":"<p>Initial physics properties of units in the squad</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV9abilitiesSayAA20FKAbilitiesComponentC13ActiveAbilityVGSgvp":{"name":"abilities","abstract":"<p>Abilities to assign to the squad</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV4heroSSSgvp":{"name":"hero","abstract":"<p>Optionally add a hero to the squad</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV13heroAbilitiesSayAA20FKAbilitiesComponentC13ActiveAbilityVGSgvp":{"name":"heroAbilities","abstract":"<p>Abilities to assign to the squad</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV10pathfinderAA21FKPathfindingProtocol_pSgXwvp":{"name":"pathfinder","abstract":"<p>Pathfinding callback</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV16herladryDelegateAA18FKHeraldryProtocol_pvp":{"name":"herladryDelegate","abstract":"<p>User input callback</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV15lightweightLoadSbvp":{"name":"lightweightLoad","abstract":"<p>Whether or not to load animations and abilities</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory/FKSquadConstruction.html#/s:12FormationKit14FKSquadFactoryC0C12ConstructionV10bundlePathSSvp":{"name":"bundlePath","abstract":"<p>Locatin of asset bundle</p>","parent_name":"FKSquadConstruction"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC14squadIDCounter33_4BC34E6763B061A496E0BFB5EF81151FLLSivp":{"name":"squadIDCounter","abstract":"<p>Internal counter to keep identifier unique</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC14showHealthBarsSbvp":{"name":"showHealthBars","abstract":"<p>Global flag to determine if health bars should show","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC9listenersSayAA0C8Protocol_pGvp":{"name":"listeners","abstract":"<p>Anyone can add themselves to listen (scene, gui, camera, etc) for squad events like death</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC9worldSizeSC6CGSizeVSgvp":{"name":"worldSize","abstract":"<p>Size of the world squads are operating in. Can be used in various places to check if on or off screen</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory/FKSquadConstruction.html":{"name":"FKSquadConstruction","abstract":"<p>Data structure to easily pass around all squad construciton information</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC14sharedInstanceACvpZ":{"name":"sharedInstance","abstract":"<p>Handle on shared factory object</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC11createSquadAA0C6EntityCAC0C12ConstructionVF":{"name":"createSquad(_:)","abstract":"<p>Main entry point for creating squads</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC13createSquadID33_4BC34E6763B061A496E0BFB5EF81151FLLSSAC0C12ConstructionVF":{"name":"createSquadID(_:)","abstract":"<p>Create a unique identifier for the squad</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC25addSquadToComponentSystem33_4BC34E6763B061A496E0BFB5EF81151FLLyAA0C6EntityCF":{"name":"addSquadToComponentSystem(_:)","abstract":"<p>Add squad to component system</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC15getMaxSquadSize33_4BC34E6763B061A496E0BFB5EF81151FLLSiAC0C12ConstructionV12construction_tF":{"name":"getMaxSquadSize(construction:)","abstract":"<p>Set a cap on the squad size if the pList contains that data. Otherwise, set the cap to the current max units for the formation</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC22doesSquadAcceptsHeroes33_4BC34E6763B061A496E0BFB5EF81151FLLSbAC0C12ConstructionV12construction_tF":{"name":"doesSquadAcceptsHeroes(construction:)","abstract":"<p>Set a cap on the squad size if the pList contains that data. Otherwise, set the cap to the current max units for the formation</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC19addAbilitiesToSquad33_4BC34E6763B061A496E0BFB5EF81151FLLyAA0C6EntityC_AC0C12ConstructionV12constructiontF":{"name":"addAbilitiesToSquad(_:construction:)","abstract":"<p>Assign the given abilities to the squad</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC23processAsPassiveAbilitySbAA0H0C7ability_AA0C6EntityC5squadtF":{"name":"processAsPassiveAbility(ability:squad:)","abstract":"<p>Some abilities go to the action bar, others just modify stats or abilites.","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC19createUnitsForSquad33_4BC34E6763B061A496E0BFB5EF81151FLLyAA0C6EntityC_AC0C12ConstructionV12constructiontF":{"name":"createUnitsForSquad(_:construction:)","abstract":"<p>Add a unit until a total of currentUnits isreached.</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC22createHeroUnitForSquad33_4BC34E6763B061A496E0BFB5EF81151FLLyAA0C6EntityC_AC0C12ConstructionV12constructiontF":{"name":"createHeroUnitForSquad(_:construction:)","abstract":"<p>Add a hero to unit if set in construction instructions.</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC22positionNewUnitInScene33_4BC34E6763B061A496E0BFB5EF81151FLLyAA12FKUnitEntityCF":{"name":"positionNewUnitInScene(_:)","abstract":"<p>Set the desired position and add the render component to the scene.</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC14getSquadByNameAA0C6EntityCSgSS4name_Sb11mustBeAlivetF":{"name":"getSquadByName(name:mustBeAlive:)","abstract":"<p>Lookup by name when we need the actual squad object that the factory created.</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC17getFriendlySquadsSayAA0C6EntityCGSb10includeNPC_Sb11mustBeAlivetF":{"name":"getFriendlySquads(includeNPC:mustBeAlive:)","abstract":"<p>Quick lookup for friendly squads</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC14getEnemySquadsSayAA0C6EntityCGyF":{"name":"getEnemySquads()","abstract":"<p>Quick lookup for enemy squads</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC11removeSquadyAA0C6EntityC5squad_tF":{"name":"removeSquad(squad:)","abstract":"<p>Remove a squad from cache</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC23removeSquadWithoutDeathyAA0C6EntityC5squad_tF":{"name":"removeSquadWithoutDeath(squad:)","abstract":"<p>Useful for things like cutscenes where you want a squad to go away but without death sounds, animations and experience gains</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC31removeSquadFromComponentSystems33_4BC34E6763B061A496E0BFB5EF81151FLLyAA0C6EntityC5squad_tF":{"name":"removeSquadFromComponentSystems(squad:)","abstract":"<p>Release from updates</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC5resetyyF":{"name":"reset()","abstract":"<p>Call this when beginning and ending levels to safely cleanup everything</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html#/s:12FormationKit14FKSquadFactoryC16componentSystemsSaySo17GKComponentSystemCySo0G0CGGvp":{"name":"componentSystems","abstract":"<p>Components must be run in this order for the squad to function / update in game</p>","parent_name":"FKSquadFactory"},"Classes/FKSquadFactory.html":{"name":"FKSquadFactory","abstract":"<p>FKSquadEntites are quite complex. All squads should be created through this entry point</p>"},"Classes/FKUnitFactory.html":{"name":"FKUnitFactory","abstract":"<p>FKUnitEntites are quite complex. All units should be created through this entry point</p>"},"Classes/FKMovementInstructions.html#/s:12FormationKit22FKMovementInstructionsC14targetPositionSC7CGPointVSgvp":{"name":"targetPosition","abstract":"<p>Ending point of the move</p>","parent_name":"FKMovementInstructions"},"Classes/FKMovementInstructions.html#/s:12FormationKit22FKMovementInstructionsC10targetPathSo6GKPathCSgvp":{"name":"targetPath","abstract":"<p>GKPath to follow if movement type is .Path</p>","parent_name":"FKMovementInstructions"},"Classes/FKMovementInstructions.html#/s:12FormationKit22FKMovementInstructionsC14desiredHeadingSfSgvp":{"name":"desiredHeading","abstract":"<p>Currently only supported by squads. Will finish move early to rotate to desired heading</p>","parent_name":"FKMovementInstructions"},"Classes/FKMovementInstructions.html#/s:12FormationKit22FKMovementInstructionsC8pathSizeSfSgvp":{"name":"pathSize","abstract":"<p>Size of the GKPath used from the navmesh. Used to squeeze a large sqaud into a smaller space","parent_name":"FKMovementInstructions"},"Classes/FKMovementInstructions.html#/s:12FormationKit22FKMovementInstructionsC4typeAA0C4TypeOvp":{"name":"type","abstract":"<p>Determines type of move.</p>","parent_name":"FKMovementInstructions"},"Classes/FKMovementInstructions.html#/s:12FormationKit22FKMovementInstructionsC8callbackyycvp":{"name":"callback","abstract":"<p>Function to execute when this class is removed from memory</p>","parent_name":"FKMovementInstructions"},"Classes/FKMovementInstructions.html#/s:12FormationKit22FKMovementInstructionsC9behaviorsSaySo10GKBehaviorCGvp":{"name":"behaviors","abstract":"<p>The custom behaviors to use for the move. Reach speed / destination is included, but add avoid obstacles / etc here.</p>","parent_name":"FKMovementInstructions"},"Classes/FKMovementInstructions.html#/s:12FormationKit22FKMovementInstructionsC9openEndedSbvp":{"name":"openEnded","abstract":"<p>Some states wish to determine if a move is complete with thier own logic instead of the default logic run in updateWithDelatTime.","parent_name":"FKMovementInstructions"},"Classes/FKMovementInstructions.html":{"name":"FKMovementInstructions","abstract":"<p>Describes everything we need for a move and is kept in memory until a move is complete.</p>"},"Shared Classes.html#/s:12FormationKit14FKMovementTypeO":{"name":"FKMovementType","abstract":"<p>Describes the type of move, and the data to look for in FKMoveInstructions</p>"},"Shared Classes.html#/c:@M@FormationKit@objc(cs)FKIntelligenceComponent":{"name":"FKIntelligenceComponent","abstract":"<p>Basic state machine component to be used by any entity, but primarily intended for Units and Squads</p>"},"Classes/FKFollowingState.html#/s:12FormationKit16FKFollowingStateC24hasArrivedAndSquadIsIdleS2b7arrived_12CoreGraphics7CGFloatV8distancet_AA13FKSquadEntityC5squadtF":{"name":"hasArrivedAndSquadIsIdle(_:squad:)","abstract":"<p>We&rsquo;ve reached the assigned position and the squad is no longer moving.","parent_name":"FKFollowingState"},"Classes/FKFollowingState.html#/s:12FormationKit16FKFollowingStateC13isStuckOrLostS2b7arrived_12CoreGraphics7CGFloatV8distancet_AA13FKSquadEntityC5squadtF":{"name":"isStuckOrLost(_:squad:)","abstract":"<p>If we&rsquo;re too far away, or hitting a physics barrier, switch to catching up because we&rsquo;re stuck</p>","parent_name":"FKFollowingState"},"Classes/FKFollowingState.html#/c:@M@FormationKit@objc(cs)FKFollowingState(im)updateAgentOrCreateMoveToPosition:":{"name":"updateAgentOrCreateMoveToPosition(_:)","abstract":"<p>If we have an active move, update it. Otherwise, create a new move</p>","parent_name":"FKFollowingState"},"Classes/FKFollowingState.html#/c:@M@FormationKit@objc(cs)FKFollowingState(im)moveTowardsDesiredPosition:":{"name":"moveTowardsDesiredPosition(_:)","abstract":"<p>Creates the MovementInstructions to execute the move.</p>","parent_name":"FKFollowingState"},"Classes/FKIdleState.html#/c:@M@FormationKit@objc(cs)FKIdleState(im)faceSameDirectionAsSquad":{"name":"faceSameDirectionAsSquad()","abstract":"<p>Attempts to keep all units in a squad facing the same direction</p>","parent_name":"FKIdleState"},"Classes/FKIdleState.html":{"name":"FKIdleState","abstract":"<p>When a unit is idle, its only job is to stay near the formation. So, it has to check if the leader is moving, and every so often"},"Classes/FKFollowingState.html":{"name":"FKFollowingState","abstract":"<p>A unit will go into follow state on its own if out of position, or might be ordered by a squad. Following will just attempt to keep up with"},"Unit Intelligence.html#/c:@M@FormationKit@objc(cs)FKDyingState":{"name":"FKDyingState","abstract":"<p>Empty state to play when death animtion is running.</p>"},"Classes/FKDeathComponent/DeathBringer.html#/s:12FormationKit16FKDeathComponentC12DeathBringerV8modifierAA8ModifierVSgvp":{"name":"modifier","abstract":"<p>Which modifier struck the final blow. Fire, ice, default attack, etc</p>","parent_name":"DeathBringer"},"Classes/FKDeathComponent/DeathBringer.html#/s:12FormationKit16FKDeathComponentC12DeathBringerV18positionOfModifierSC7CGPointVSgvp":{"name":"positionOfModifier","abstract":"<p>Position of modifier. Relevant if AoE or some other method killed the unit</p>","parent_name":"DeathBringer"},"Classes/FKDeathComponent/DeathBringer.html#/s:12FormationKit16FKDeathComponentC12DeathBringerV17headingOfModifier12CoreGraphics7CGFloatVSgvp":{"name":"headingOfModifier","abstract":"<p>The direction of the modifier to this unit</p>","parent_name":"DeathBringer"},"Classes/FKDeathComponent/DeathBringer.html#/s:12FormationKit16FKDeathComponentC12DeathBringerV4typeAC0E4TypeOvp":{"name":"type","abstract":"<p>Flag to control if animations, sounds, etc should happen when the unit dies</p>","parent_name":"DeathBringer"},"Classes/FKDeathComponent/DeathBringer.html":{"name":"DeathBringer","abstract":"<p>Struct to hold death related information to play proper animations and sounds</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/s:12FormationKit16FKDeathComponentC9DeathTypeO":{"name":"DeathType","abstract":"<p>Flag to control if animations, sounds, etc should happen when the unit dies</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(py)dying":{"name":"dying","abstract":"<p>In case cleanup takes a few frames (i.e.: animation finishes playing), reference this bool to know if a unit is dead</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(py)finalRotationOfBody":{"name":"finalRotationOfBody","abstract":"<p>The heading the body should rotate to, adjust by -1.57 becase headings start at 0, body bodies are upright</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(py)finalHeadingOfBody":{"name":"finalHeadingOfBody","abstract":"<p>The actual heading wihtout the -1.57 adjustment</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(py)normalizedVectorTowardsRestingPosition":{"name":"normalizedVectorTowardsRestingPosition","abstract":"<p>Normalized vector in direction of impact heading</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(py)finalRestingPosition":{"name":"finalRestingPosition","abstract":"<p>Final CGPoint the body will end up at</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(py)forceOfImpact":{"name":"forceOfImpact","abstract":"<p>Since we randomize this, do it once and store final force to use everywhere</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(py)deathFade":{"name":"deathFade","abstract":"<p>Fade effect for all objects to fade away. Keeps timing consistent</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(im)removeFromUpdateLoopWithUnit:all:":{"name":"removeFromUpdateLoop(unit:all:)","abstract":"<p>remove unit from update loop","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(im)runDeathAnimationWithUnit:":{"name":"runDeathAnimation(unit:)","abstract":"<p>Run the death animation. Have to manually call resolve since the update loop for this unit has been removed</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(im)rotateTowardsRestingRotationWithUnit:duration:trimAngle:":{"name":"rotateTowardsRestingRotation(unit:duration:trimAngle:)","abstract":"<p>Common action to rotate the unit to the position it will lay in</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(im)rotateUnitRandomly":{"name":"rotateUnitRandomly()","abstract":"<p>Simple rotation to rnaomdize where the unit falls</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(im)arcTowardsRestingPositionWithUnit:duration:lift:":{"name":"arcTowardsRestingPosition(unit:duration:lift:)","abstract":"<p>Action to move unit in an arc towards another position</p>","parent_name":"FKDeathComponent"},"Classes/FKDeathComponent.html#/c:@M@FormationKit@objc(cs)FKDeathComponent(im)moveShadowToRestingPositionWithUnit:duration:":{"name":"moveShadowToRestingPosition(unit:duration:)","abstract":"<p>Have shadow follow unit to final resting position</p>","parent_name":"FKDeathComponent"},"Classes/FKRankComponent.html#/c:@M@FormationKit@objc(cs)FKRankComponent(py)squad":{"name":"squad","abstract":"<p>The squad that this unit belongs to, if any</p>","parent_name":"FKRankComponent"},"Classes/FKRankComponent.html#/s:12FormationKit15FKRankComponentC16standingPositionAA010FKStandingF0CSgvp":{"name":"standingPosition","abstract":"<p>Position within the squads formation. Other components may update this. Goal for Unit is to always be where ordered","parent_name":"FKRankComponent"},"Classes/FKRankComponent.html#/c:@M@FormationKit@objc(cs)FKRankComponent(im)getClosestUnitInDirectionOfCombat":{"name":"getClosestUnitInDirectionOfCombat()","abstract":"<p>Let&rsquo;s say the squad is facing right (0 radians) and the target is behind. The unit wants to find the closest unit behind them to stick with.","parent_name":"FKRankComponent"},"Classes/FKMovementComponent.html#/s:12FormationKit19FKMovementComponentC11currentMoveAA0C12InstructionsCSgvp":{"name":"currentMove","abstract":"<p>If we&rsquo;re currently executing a move, store a reference to it.</p>","parent_name":"FKMovementComponent"},"Classes/FKMovementComponent.html#/c:@M@FormationKit@objc(cs)FKMovementComponent(py)trackingAgent":{"name":"trackingAgent","abstract":"<p>The agent created for the move. Set at target position or next path point. Update dynamically mid move if needed.</p>","parent_name":"FKMovementComponent"},"Classes/FKMovementComponent.html#/s:12FormationKit19FKMovementComponentC8strategyAA21FKPathfindingProtocol_pSgXwvp":{"name":"strategy","abstract":"<p>Pathfinding strategy to use for all moves that need a path</p>","parent_name":"FKMovementComponent"},"Classes/FKMovementComponent.html#/c:@M@FormationKit@objc(cs)FKMovementComponent(py)wander":{"name":"wander","abstract":"<p>Behavior goals</p>","parent_name":"FKMovementComponent"},"Classes/FKMovementComponent.html#/s:12FormationKit19FKMovementComponentCAcA21FKPathfindingProtocol_pSg8strategy_tcfc":{"name":"init(strategy:)","abstract":"<p>Init requires a pathifnd strategy to aid movement</p>","parent_name":"FKMovementComponent"},"Classes/FKMovementComponent.html#/c:@M@FormationKit@objc(cs)FKMovementComponent(im)updateWithDeltaTime:":{"name":"update(deltaTime:)","abstract":"<p>Goal is to check each frame if we have reached target destination</p>","parent_name":"FKMovementComponent"},"Classes/FKMovementComponent.html#/c:@M@FormationKit@objc(cs)FKMovementComponent(im)cancelExistingMove":{"name":"cancelExistingMove()","abstract":"<p>Remove reference to current move, and update other unit components that would be interested</p>","parent_name":"FKMovementComponent"},"Classes/FKMovementComponent.html#/s:12FormationKit19FKMovementComponentC27executeMovementInstructionsyAA0cG0CF":{"name":"executeMovementInstructions(_:)","abstract":"<p>Entry point to move a unit. Conditionally looks at movement type and executes</p>","parent_name":"FKMovementComponent"},"Classes/FKMovementComponent.html#/s:12FormationKit19FKMovementComponentC16moveTowardsPointyAA0C12InstructionsCF":{"name":"moveTowardsPoint(_:)","abstract":"<p>Sets a tracking agent at position and a goal of reaching that agent</p>","parent_name":"FKMovementComponent"},"Classes/FKMovementComponent.html#/s:12FormationKit19FKMovementComponentC10followPathyAA0C12InstructionsCF":{"name":"followPath(_:)","abstract":"<p>Follow a GKPath</p>","parent_name":"FKMovementComponent"},"Classes/FKMovementComponent.html#/c:@M@FormationKit@objc(cs)FKMovementComponent(im)updateTrackingAgent:":{"name":"updateTrackingAgent(_:)","abstract":"<p>Creating new moves can be expensive especially when destorying and recreating a lot of goals.","parent_name":"FKMovementComponent"},"Classes/FKMovementComponent.html#/c:@M@FormationKit@objc(cs)FKMovementComponent(im)distanceToAgent:otherAgent:":{"name":"distanceToAgent(_:otherAgent:)","abstract":"<p>The direct distance between this entitiy&rsquo;s agent and another agent in the scene.</p>","parent_name":"FKMovementComponent"},"Classes/FKMovementComponent.html#/s:12FormationKit19FKMovementComponentC20hasArrivedAtPositionSb7arrived_12CoreGraphics7CGFloatV8distancetAA12FKUnitEntityC_SC7CGPointV7desiredAH6buffertFZ":{"name":"hasArrivedAtPosition(_:desired:buffer:)","abstract":"<p>When an agent has arrived we can stop steering, so this is checked frequently. This checks difference between points in scene instead of agent simulation.</p>","parent_name":"FKMovementComponent"},"Classes/FKAnimationComponent.html#/s:12FormationKit20FKAnimationComponentC10animationss10DictionaryVyAC14AnimationStateOAC0G0CGvp":{"name":"animations","abstract":"<p>Cached textures to use</p>","parent_name":"FKAnimationComponent"},"Classes/FKAnimationComponent.html#/s:12FormationKit20FKAnimationComponentC18requestedAnimationAC0F5StateOSgvp":{"name":"requestedAnimation","abstract":"<p>Pending animation</p>","parent_name":"FKAnimationComponent"},"Classes/FKAnimationComponent.html#/s:12FormationKit20FKAnimationComponentC16currentAnimationAC0F5StateOSgvp":{"name":"currentAnimation","abstract":"<p>Handle on current animation for easy lookup</p>","parent_name":"FKAnimationComponent"},"Classes/FKAnimationComponent.html#/c:@M@FormationKit@objc(cs)FKAnimationComponent(im)resolveRequestedAnimation":{"name":"resolveRequestedAnimation()","abstract":"<p>Run an animation if it isn&rsquo;t already running. Or, if .Idle is requested, stop animations.</p>","parent_name":"FKAnimationComponent"},"Classes/FKAnimationComponent.html#/s:12FormationKit20FKAnimationComponentC12runAnimation33_ACFF380A7568AD52FCB69D8436A226C7LLyAA12FKUnitEntityC_AC0F5StateO7requesttF":{"name":"runAnimation(_:request:)","abstract":"<p>Runs the animation of it exists in cache. Will run once or repeat based on .shouldRepeat. Updates handle on current animation.</p>","parent_name":"FKAnimationComponent"},"Classes/FKAnimationComponent.html#/c:@M@FormationKit@objc(cs)FKAnimationComponent(im)updateWithDeltaTime:":{"name":"update(deltaTime:)","abstract":"<p>Constantly checking to see if an animation is requested. If so, put it in motion.","parent_name":"FKAnimationComponent"},"Classes/FKAnimationComponent.html#/s:12FormationKit20FKAnimationComponentC9AnimationC":{"name":"Animation","abstract":"<p>Defines everything need for the animation to run.","parent_name":"FKAnimationComponent"},"Classes/FKAnimationComponent.html#/s:12FormationKit20FKAnimationComponentC14AnimationStateO":{"name":"AnimationState","abstract":"<p>Different keys used to classify animations.","parent_name":"FKAnimationComponent"},"Classes/FKRenderComponent.html#/c:@M@FormationKit@objc(cs)FKRenderComponent(py)node":{"name":"node","abstract":"<p>The sprite node on the scene</p>","parent_name":"FKRenderComponent"},"Classes/FKRenderComponent.html#/s:12FormationKit17FKRenderComponentC6shadowAA16FKPoolableObjectCSgvp":{"name":"shadow","abstract":"<p>A shadow for the sprite</p>","parent_name":"FKRenderComponent"},"Classes/FKRenderComponent.html#/s:12FormationKit17FKRenderComponentC15pooledHealthBarAA16FKPoolableObjectCSgvp":{"name":"pooledHealthBar","abstract":"<p>A handle on the healthbar so that we don&rsquo;t have to search the tree</p>","parent_name":"FKRenderComponent"},"Classes/FKRenderComponent.html#/c:@M@FormationKit@objc(cs)FKRenderComponent(py)basePosition":{"name":"basePosition","abstract":"<p>Returns the standing position of the node where the feet touch the ground</p>","parent_name":"FKRenderComponent"},"Classes/FKRenderComponent.html#/c:@M@FormationKit@objc(cs)FKRenderComponent(im)initWithImage:entity:shadow:":{"name":"init(image:entity:shadow:)","abstract":"<p>Creates the sprite, sets up the physics body, links the shadow</p>","parent_name":"FKRenderComponent"},"Classes/FKRenderComponent.html#/c:@M@FormationKit@objc(cs)FKRenderComponent(im)setEntityNode:":{"name":"setEntityNode(_:)","abstract":"<p>Called on init, or also called when copying a character since each sprite can only have one parent on the scene</p>","parent_name":"FKRenderComponent"},"Classes/FKRenderComponent.html#/c:@M@FormationKit@objc(cs)FKRenderComponent(im)loadShadow":{"name":"loadShadow()","abstract":"<p>Sets up a shadow with constraints. Still has to be manually added to world wherever the CharacterEntity is originally initialized.","parent_name":"FKRenderComponent"},"Classes/FKRenderComponent.html#/c:@M@FormationKit@objc(cs)FKRenderComponent(im)selectUnit":{"name":"selectUnit()","abstract":"<p>Utility to control what happens when a unit is selected.</p>","parent_name":"FKRenderComponent"},"Classes/FKRenderComponent.html#/c:@M@FormationKit@objc(cs)FKRenderComponent(im)unselectUnit":{"name":"unselectUnit()","abstract":"<p>Display change for when a unit is unselected.</p>","parent_name":"FKRenderComponent"},"Classes/FKRenderComponent.html#/c:@M@FormationKit@objc(cs)FKRenderComponent(im)updateWithDeltaTime:":{"name":"update(deltaTime:)","abstract":"<p>Called each frame to update the component</p>","parent_name":"FKRenderComponent"},"Classes/FKRenderComponent.html#/c:@M@FormationKit@objc(cs)FKRenderComponent(im)setDirectionToFace:":{"name":"setDirectionToFace(_:)","abstract":"<p>Changing the scale can be expensive to CPU, so we only want to change it if it differs","parent_name":"FKRenderComponent"},"Classes/FKRenderComponent.html#/c:@M@FormationKit@objc(cs)FKRenderComponent(im)updateZPosition":{"name":"updateZPosition()","abstract":"<p>Sets the characters zPosition to 3500 - their y position. This causes characters lower in the screen to be higher, which gives fake depth.</p>","parent_name":"FKRenderComponent"},"Classes/FKRenderComponent.html#/c:@M@FormationKit@objc(cs)FKRenderComponent(im)resetToBaseFrame":{"name":"resetToBaseFrame()","abstract":"<p>We don&rsquo;t want to call this every update because an animation could be running","parent_name":"FKRenderComponent"},"Classes/FKUnitAgent.html#/c:@M@FormationKit@objc(cs)FKUnitAgent(py)baseSpeed":{"name":"baseSpeed","abstract":"<p>Used as default of no modifiers applied</p>","parent_name":"FKUnitAgent"},"Classes/FKUnitAgent.html#/c:@M@FormationKit@objc(cs)FKUnitAgent(py)actualPosition":{"name":"actualPosition","abstract":"<p>This will only update when the entity is in motion. Necessary because the agent still moves 1/100th of a pixel even at rest.","parent_name":"FKUnitAgent"},"Classes/FKUnitAgent.html#/c:@M@FormationKit@objc(cs)FKUnitAgent(py)actualHeading":{"name":"actualHeading","abstract":"<p>Updated each frame when the entity is in motion</p>","parent_name":"FKUnitAgent"},"Classes/FKUnitAgent.html#/c:@M@FormationKit@objc(cs)FKUnitAgent(py)layerPosition":{"name":"layerPosition","abstract":"<p>Position of the squad is determined by the position of the agent</p>","parent_name":"FKUnitAgent"},"Classes/FKUnitAgent.html#/c:@M@FormationKit@objc(cs)FKUnitAgent(im)init":{"name":"init()","abstract":"<p>Sets up default mass, speed and empty behaviors.</p>","parent_name":"FKUnitAgent"},"Classes/FKUnitAgent.html#/c:@M@FormationKit@objc(cs)FKUnitAgent(im)setHeading:":{"name":"setHeading(_:)","abstract":"<p>Helper method to set both at once</p>","parent_name":"FKUnitAgent"},"Classes/FKUnitAgent.html#/c:@M@FormationKit@objc(cs)FKUnitAgent(im)setPos:":{"name":"setPos(_:)","abstract":"<p>Helper method to set both at once</p>","parent_name":"FKUnitAgent"},"Classes/FKUnitAgent.html#/c:@M@FormationKit@objc(cs)FKUnitAgent(im)setPlacement:rotation:":{"name":"setPlacement(_:rotation:)","abstract":"<p>Helper method to set both at once</p>","parent_name":"FKUnitAgent"},"Classes/FKUnitAgent.html#/c:@M@FormationKit@objc(cs)FKUnitAgent(im)setWalkingSpeed":{"name":"setWalkingSpeed()","abstract":"<p>Figure out what to do with squad walking speed? Set to same as leader? Or slow leader down to same as everyone else, and make squad 10% faster?</p>","parent_name":"FKUnitAgent"},"Classes/FKUnitAgent.html#/c:@M@FormationKit@objc(cs)FKUnitAgent(im)toStayInFormation":{"name":"toStayInFormation()","abstract":"<p>Useful to stay with formation but avoid others. Expects a separate seek goal to be created elsewhere.</p>","parent_name":"FKUnitAgent"},"Classes/FKUnitAgent.html#/c:@M@FormationKit@objc(cs)FKUnitAgent(im)toAvoidWhileSeeking":{"name":"toAvoidWhileSeeking()","abstract":"<p>Seprate from agents in own squad and in target squad</p>","parent_name":"FKUnitAgent"},"Classes/FKUnitAgent.html":{"name":"FKUnitAgent","abstract":"<p>Generic agent class that mainly serves as a basic GKAgent2D. Encapsulated in case custom"},"Classes/FKRenderComponent.html":{"name":"FKRenderComponent","abstract":"<p>Controls the base visual display of an entity. This includes the sprite itself, along with updates to make sure the sprite is"},"Classes/FKAnimationComponent.html":{"name":"FKAnimationComponent","abstract":"<p>Handles running a requested animation. Other components will request starting and stopping animations."},"Classes/FKMovementComponent.html":{"name":"FKMovementComponent","abstract":"<p>Handles moving the unit agent, and related goals.</p>"},"Classes/FKRankComponent.html":{"name":"FKRankComponent","abstract":"<p>This component is necessary for anyone in a squad to properly function. Individuals won&rsquo;t need it."},"Classes/FKDeathComponent.html":{"name":"FKDeathComponent","abstract":"<p>Handles cleanup when a unit dies.</p>"},"Classes/FKUnitEntity.html#/c:@M@FormationKit@objc(cs)FKUnitEntity(py)scene":{"name":"scene","abstract":"<p>Game scene the squad was created on. Reference needed for agent positioning</p>","parent_name":"FKUnitEntity"},"Classes/FKUnitEntity.html#/c:@M@FormationKit@objc(cs)FKUnitEntity(py)layer":{"name":"layer","abstract":"<p>Layer within the scene the sqaud should live on. Also used for positioning</p>","parent_name":"FKUnitEntity"},"Classes/FKUnitEntity.html#/s:12FormationKit12FKUnitEntityCACSS4name_So7SKSceneCSg5sceneSo6SKNodeCSg5layerAA21FKPathfindingProtocol_pSg10pathfinderAA16FKPhysicsServiceC16UnitPhysicsStateO7physicstcfc":{"name":"init(name:scene:layer:pathfinder:physics:)","abstract":"<p>Default initializer. Name is <q>Archer1</q> or other character string</p>","parent_name":"FKUnitEntity"},"Classes/FKUnitEntity.html#/s:12FormationKit12FKUnitEntityC23setupIntelligenceStates33_BB5D811E2C3BF50ED78025167055B698LLyyF":{"name":"setupIntelligenceStates()","abstract":"<p>Init state machine</p>","parent_name":"FKUnitEntity"},"Classes/FKUnitEntity.html#/c:@M@FormationKit@objc(cs)FKUnitEntity(im)addUnitToSquad:":{"name":"addUnitToSquad(_:)","abstract":"<p>The goal is for units to be able to act as individuals without a squad. Examples would be cutscenes, or heroes.","parent_name":"FKUnitEntity"},"Classes/FKUnitEntity.html#/c:@M@FormationKit@objc(cs)FKUnitEntity(im)agentDidUpdate:":{"name":"agentDidUpdate(_:)","abstract":"<p>If in motion, always set the node position, and actual heading / position to that of the agent. Otherwise, ignore the agent</p>","parent_name":"FKUnitEntity"},"Classes/FKUnitEntity.html#/c:@M@FormationKit@objc(cs)FKUnitEntity(im)agentWillUpdate:":{"name":"agentWillUpdate(_:)","abstract":"<p>Reset the agent back to the nodes position because external things like physics may have affected it. This happens first each frame, and then","parent_name":"FKUnitEntity"},"Classes/FKUnitEntity.html":{"name":"FKUnitEntity","abstract":"<p>Main unit entity class that all other entities inherit from. Usually belongs to a squad. Fairly empty except that it will serve to cache"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C9unitWidthSfvpZ":{"name":"unitWidth","abstract":"<p>To find the exact center of the formation, take the columns and spacing but you also have to factor in the unit width for the final offset","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C12instructionsAA20FKFormationComponentC23ArrangementInstructionsVvp":{"name":"instructions","abstract":"<p>The instructions for grid require data for columns</p>","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C9positionsSayAA18FKStandingPositionCGvp":{"name":"positions","abstract":"<p>The assigned positions</p>","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C9totalRowsSivp":{"name":"totalRows","abstract":"<p>Uses current columns and max units to find max rows. Add +1 for potential hero</p>","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C6radiusSfvp":{"name":"radius","abstract":"<p>Uses current columns and spacing to determine radius</p>","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C5depthSfvp":{"name":"depth","abstract":"<p>Uses rows to determine depth for y spacing</p>","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0CAcA20FKFormationComponentC23ArrangementInstructionsV12instructions_tcfc":{"name":"init(instructions:)","abstract":"<p>Construct the positions according to instructions</p>","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C7rebuildyAA20FKFormationComponentC23ArrangementInstructionsVF":{"name":"rebuild(_:)","abstract":"<p>Same as init, but allows reconstructing on the fly</p>","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C19buildFixedLocationsyyF":{"name":"buildFixedLocations()","abstract":"<p>For a grid, build from inside out, with first row up front.","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C22findPriorityOfPosition33_8B58DAD73CE25A33B7124C78BE40A899LLS2i_Si5gridYSi7columnstF":{"name":"findPriorityOfPosition(_:gridY:columns:)","abstract":"<p>Attempts to rank a position by row and proximity to center.","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C29findNearbyPositionInDirectionAA010FKStandingF0CSgAF08standingF0_12CoreGraphics7CGFloatV9directiontF":{"name":"findNearbyPositionInDirection(standingPosition:direction:)","abstract":"<p>Given a direction, find the closet neighbor unit. So, if facing forward, return the unit in front. But, if a direction of","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C15adjustLocationsSay4simd6float2VGSC7CGPointV_Sf8rotationAGSg9translateAJSg6offsetSiSg6randomSb8reassigntF":{"name":"adjustLocations(_:rotation:translate:offset:random:reassign:)","abstract":"<p>This will calculate the expected position for every unit, given the parameters. Updates the array of standing positions.</p>","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C12rotateVector33_8B58DAD73CE25A33B7124C78BE40A899LL4simd6float2VAH_Sf3cosSf3sintF":{"name":"rotateVector(_:cos:sin:)","abstract":"<p>Given a cached sin and cos of a rotation, return the adjusted vector</p>","parent_name":"FKGridFormation"},"Classes/FKGridFormation.html#/s:12FormationKit06FKGridA0C26translateVectorToIsometric33_8B58DAD73CE25A33B7124C78BE40A899LL4simd6float2VAHF":{"name":"translateVectorToIsometric(_:)","abstract":"<p>Convert to iso projection. Magic number? See here: <a href=\"http://stackoverflow.com/questions/10506502/what-is-the-connection-between-an-isometric-angle-and-scale\">http://stackoverflow.com/questions/10506502/what-is-the-connection-between-an-isometric-angle-and-scale</a>","parent_name":"FKGridFormation"},"Classes/FKStandingPosition.html#/s:12FormationKit18FKStandingPositionC13fixedLocation4simd6float2Vvp":{"name":"fixedLocation","abstract":"<p>Never changes. Root position if unit is facing 0 degrees</p>","parent_name":"FKStandingPosition"},"Classes/FKStandingPosition.html#/s:12FormationKit18FKStandingPositionC16adjustedLocation4simd6float2Vvp":{"name":"adjustedLocation","abstract":"<p>Position after world changes. Rotation, translation, offset, etc</p>","parent_name":"FKStandingPosition"},"Classes/FKStandingPosition.html#/s:12FormationKit18FKStandingPositionC5gridXSivp":{"name":"gridX","abstract":"<p>X location within the formation</p>","parent_name":"FKStandingPosition"},"Classes/FKStandingPosition.html#/s:12FormationKit18FKStandingPositionC5gridYSivp":{"name":"gridY","abstract":"<p>Y location within the formation</p>","parent_name":"FKStandingPosition"},"Classes/FKStandingPosition.html#/s:12FormationKit18FKStandingPositionC8prioritySivp":{"name":"priority","abstract":"<p>Priority within formation</p>","parent_name":"FKStandingPosition"},"Classes/FKStandingPosition.html#/s:12FormationKit18FKStandingPositionC10occupiedByAA12FKUnitEntityCSgvp":{"name":"occupiedBy","abstract":"<p>Person standing here. Stored as reference to prevent multiple iterations thourghout various parts of the code</p>","parent_name":"FKStandingPosition"},"Classes/FKStandingPosition.html#/s:12FormationKit18FKStandingPositionCAC4simd6float2V13fixedLocation_Si5gridXSi0I1YSi8prioritytcfc":{"name":"init(fixedLocation:gridX:gridY:priority:)","abstract":"<p>Basic setters for the position</p>","parent_name":"FKStandingPosition"},"Squad Formations.html#/s:12FormationKit19FKFormationProtocolP":{"name":"FKFormationProtocol","abstract":"<p>Class that is capable of determining positions of units while in formation. Example would be a class that arranges units in a triangle or square. FKFormationComponenet will communicate with this protocol and relay message back to squad and units</p>"},"Classes/FKStandingPosition.html":{"name":"FKStandingPosition","abstract":"<p>A data structure used by all classes following FKFormationProtocol. This structure should indicate positioning and neighbors</p>"},"Classes/FKGridFormation.html":{"name":"FKGridFormation","abstract":"<p>Place units in a grid with a set amount of columns. Organizes priority from center out.</p>"},"Classes/FKSquadDebugComponent.html#/c:@M@FormationKit@objc(cs)FKSquadDebugComponent(im)initWithEntity:":{"name":"init(entity:)","abstract":"<p>Creates the sprite, sets up the physics body, links the shadow</p>","parent_name":"FKSquadDebugComponent"},"Classes/FKSquadDebugComponent.html#/c:@M@FormationKit@objc(cs)FKSquadDebugComponent(im)updateWithDeltaTime:":{"name":"update(deltaTime:)","abstract":"<p>Called each frame to update the component</p>","parent_name":"FKSquadDebugComponent"},"Classes/FKSquadDebugComponent.html#/c:@M@FormationKit@objc(cs)FKSquadDebugComponent(im)debugSquadPosition:scene:layer:":{"name":"debugSquadPosition(_:scene:layer:)","abstract":"<p>Use squad agent to determine position</p>","parent_name":"FKSquadDebugComponent"},"Classes/FKSquadDebugComponent.html#/c:@M@FormationKit@objc(cs)FKSquadDebugComponent(im)debugStandingPositions:scene:layer:":{"name":"debugStandingPositions(_:scene:layer:)","abstract":"<p>Use squad formation strategy to show desired positions</p>","parent_name":"FKSquadDebugComponent"},"Classes/FKSquadDebugComponent.html#/c:@M@FormationKit@objc(cs)FKSquadDebugComponent(im)debugSquadHeading:scene:layer:":{"name":"debugSquadHeading(_:scene:layer:)","abstract":"<p>Use squad agent to determine position</p>","parent_name":"FKSquadDebugComponent"},"Classes/FKSquadDebugComponent.html#/c:@M@FormationKit@objc(cs)FKSquadDebugComponent(im)debugUnitStandingPositions:scene:layer:":{"name":"debugUnitStandingPositions(_:scene:layer:)","abstract":"<p>Shows the standing positions that are occupied by units</p>","parent_name":"FKSquadDebugComponent"},"Classes/FKSquadDebugComponent.html#/c:@M@FormationKit@objc(cs)FKSquadDebugComponent(im)debugSquadState:scene:layer:":{"name":"debugSquadState(_:scene:layer:)","abstract":"<p>Show current state of squad</p>","parent_name":"FKSquadDebugComponent"},"Classes/FKSquadDebugComponent.html#/c:@M@FormationKit@objc(cs)FKSquadDebugComponent(im)debugUnitsState:scene:layer:":{"name":"debugUnitsState(_:scene:layer:)","abstract":"<p>Show which state the units are currently in</p>","parent_name":"FKSquadDebugComponent"},"Classes/FKSquadDebugComponent.html#/s:12FormationKit21FKSquadDebugComponentC12createCircle33_9466303CEEB8B35B6D759ECB3B7C480ELLSo11SKShapeNodeC12CoreGraphics7CGFloatV_SC7CGPointV8positionSo7UIColorC5colortF":{"name":"createCircle(_:position:color:)","abstract":"<p>Create a circle</p>","parent_name":"FKSquadDebugComponent"},"Classes/FKSquadDebugComponent.html#/s:12FormationKit21FKSquadDebugComponentC11createLabel33_9466303CEEB8B35B6D759ECB3B7C480ELLSo11SKLabelNodeCSS_12CoreGraphics7CGFloatV8fontSizeSo7UIColorC5colortF":{"name":"createLabel(_:fontSize:color:)","abstract":"<p>Create a text label</p>","parent_name":"FKSquadDebugComponent"},"Classes/FKCasualtyComponent.html#/c:@M@FormationKit@objc(cs)FKCasualtyComponent(py)dying":{"name":"dying","abstract":"<p>Sometimes cleanup may take longer than expected. So, critical death related functions will check if a squad is dying before executing</p>","parent_name":"FKCasualtyComponent"},"Classes/FKCasualtyComponent.html#/c:@M@FormationKit@objc(cs)FKCasualtyComponent(im)unitHasDied:":{"name":"unitHasDied(_:)","abstract":"<p>Entry point to call if unit has died. Requires code to call this instead of listening each frame to improve performance.</p>","parent_name":"FKCasualtyComponent"},"Classes/FKCasualtyComponent.html#/s:12FormationKit19FKCasualtyComponentC23updateStandingPositions33_7F1DFA19470A5D30AADD41B93F883163LLyAA13FKSquadEntityCF":{"name":"updateStandingPositions(_:)","abstract":"<p>Reassign each unit to a new position</p>","parent_name":"FKCasualtyComponent"},"Classes/FKNavigationComponent.html#/s:12FormationKit21FKNavigationComponentC11currentMoveAA22FKMovementInstructionsCSgvp":{"name":"currentMove","abstract":"<p>If we&rsquo;re currently executing a move, store a reference to it.</p>","parent_name":"FKNavigationComponent"},"Classes/FKNavigationComponent.html#/c:@M@FormationKit@objc(cs)FKNavigationComponent(py)agentsToAvoid":{"name":"agentsToAvoid","abstract":"<p>List of agents to avoid. Does nothing by default. Meant to be calculated and set when needed from outside</p>","parent_name":"FKNavigationComponent"},"Classes/FKNavigationComponent.html#/c:@M@FormationKit@objc(cs)FKNavigationComponent(py)trackingAgent":{"name":"trackingAgent","abstract":"<p>The agent created for the move. Set at target position or next path point. Update dynamically mid move if needed.</p>","parent_name":"FKNavigationComponent"},"Classes/FKNavigationComponent.html#/s:12FormationKit21FKNavigationComponentC8strategyAA21FKPathfindingProtocol_pSgXwvp":{"name":"strategy","abstract":"<p>Pathfinding strategy to use for all moves that need a path</p>","parent_name":"FKNavigationComponent"},"Classes/FKNavigationComponent.html#/s:12FormationKit21FKNavigationComponentCAcA21FKPathfindingProtocol_pSg8strategy_tcfc":{"name":"init(strategy:)","abstract":"<p>Init requires a pathifnd strategy to aid movement</p>","parent_name":"FKNavigationComponent"},"Classes/FKNavigationComponent.html#/c:@M@FormationKit@objc(cs)FKNavigationComponent(im)updateWithDeltaTime:":{"name":"update(deltaTime:)","abstract":"<p>Goal is to check each frame if we have reached target destination</p>","parent_name":"FKNavigationComponent"},"Classes/FKNavigationComponent.html#/c:@M@FormationKit@objc(cs)FKNavigationComponent(im)cancelExistingMove":{"name":"cancelExistingMove()","abstract":"<p>Remove reference to current move, and update other squad components that would be interested</p>","parent_name":"FKNavigationComponent"},"Classes/FKNavigationComponent.html#/s:12FormationKit21FKNavigationComponentC27executeMovementInstructionsyAA010FKMovementG0CF":{"name":"executeMovementInstructions(_:)","abstract":"<p>Entry point to move a squad. Conditionally looks at movement type and executes</p>","parent_name":"FKNavigationComponent"},"Classes/FKNavigationComponent.html#/s:12FormationKit21FKNavigationComponentC16moveTowardsPointyAA22FKMovementInstructionsCF":{"name":"moveTowardsPoint(_:)","abstract":"<p>Sets a tracking agent at position and a goal of reaching that agent</p>","parent_name":"FKNavigationComponent"},"Classes/FKNavigationComponent.html#/s:12FormationKit21FKNavigationComponentC10followPathyAA22FKMovementInstructionsCF":{"name":"followPath(_:)","abstract":"<p>Follow a GKPath</p>","parent_name":"FKNavigationComponent"},"Classes/FKNavigationComponent.html#/s:12FormationKit21FKNavigationComponentC15teleportToPointyAA22FKMovementInstructionsC12instructions_tF":{"name":"teleportToPoint(instructions:)","abstract":"<p>Instantly move a squad to a point</p>","parent_name":"FKNavigationComponent"},"Classes/FKNavigationComponent.html#/c:@M@FormationKit@objc(cs)FKNavigationComponent(im)orderUnitsToMove":{"name":"orderUnitsToMove()","abstract":"<p>Conistent location to orde runits when they should attack. Consolidates logic to this one function.</p>","parent_name":"FKNavigationComponent"},"Classes/FKNavigationComponent.html#/c:@M@FormationKit@objc(cs)FKNavigationComponent(im)distanceToAgent:otherAgent:":{"name":"distanceToAgent(_:otherAgent:)","abstract":"<p>The direct distance between this entitiy&rsquo;s agent and another agent in the scene.</p>","parent_name":"FKNavigationComponent"},"Classes/FKFormationComponent.html#/c:@M@FormationKit@objc(cs)FKFormationComponent(py)originalColumnCount":{"name":"originalColumnCount","abstract":"<p>For scripting and movement we can randomyl change squad layouts. Storing a reference to this allows for easy switching back to what the user originally set up</p>","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/c:@M@FormationKit@objc(cs)FKFormationComponent(im)updateWithDeltaTime:":{"name":"update(deltaTime:)","abstract":"<p>Called each frame to update the component</p>","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/s:12FormationKit20FKFormationComponentC31updateStrategyStandingPositionsySfSgF":{"name":"updateStrategyStandingPositions(_:)","abstract":"<p>Rotate the squad and translate to squads current positions.","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/s:12FormationKit20FKFormationComponentC24previewStandingPositionsSay4simd6float2VGSC7CGPointV_Sf8rotationAGSg9translateAJSg6offsetSiSg6randomtF":{"name":"previewStandingPositions(_:rotation:translate:offset:random:)","abstract":"<p>Helper function to preview desired positions without actually ordering the units</p>","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/c:@M@FormationKit@objc(cs)FKFormationComponent(im)assignStandingPositionToNewUnit:":{"name":"assignStandingPositionToNewUnit(_:)","abstract":"<p>Assumes existing units in squad, so will send this unit to the highest available priority position</p>","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/s:12FormationKit20FKFormationComponentC26getStandingPositionAtIndexAA010FKStandingG0CSgSi5index_tF":{"name":"getStandingPositionAtIndex(index:)","abstract":"<p>Find the standing position at a given index. Useful for debug overlays, ghosting dead units, etc</p>","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/c:@M@FormationKit@objc(cs)FKFormationComponent(im)assingStandingPositions":{"name":"assingStandingPositions()","abstract":"<p>Convenience method to quickyl reassign all standing positions</p>","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/c:@M@FormationKit@objc(cs)FKFormationComponent(im)assignStandingPositionToHero:":{"name":"assignStandingPositionToHero(_:)","abstract":"<p>Ability to add a hero to a formation after the squad ha sbeen created. Gives hero desired spot, and kicks another","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/c:@M@FormationKit@objc(cs)FKFormationComponent(im)reassignStandingPositionsByPriority":{"name":"reassignStandingPositionsByPriority()","abstract":"<p>Imagine 3 random units die in the squad. Reassign will perform logic to move the closest units to fill the gaps","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/c:@M@FormationKit@objc(cs)FKFormationComponent(im)reassignStandingPositionsByDistance":{"name":"reassignStandingPositionsByDistance()","abstract":"<p>Does the same as reassignStandingPositionsByPriority except it actually checks the distance in the game layer","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/s:12FormationKit20FKFormationComponentC28unassignAllStandingPositions33_06FCAC728E0236758DE8FE1D3DC589E9LLyyF":{"name":"unassignAllStandingPositions()","abstract":"<p>Start with a clean slate by removing any existing orders to units</p>","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/c:@M@FormationKit@objc(cs)FKFormationComponent(im)unassignUnitsStandingPosition:":{"name":"unassignUnitsStandingPosition(_:)","abstract":"<p>Unassign position for 1 unit</p>","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/s:12FormationKit20FKFormationComponentC32findUnitOccupyingClosestPosition33_06FCAC728E0236758DE8FE1D3DC589E9LLAA12FKUnitEntityCSgAA010FKStandingI0CF":{"name":"findUnitOccupyingClosestPosition(_:)","abstract":"<p>This function will search all rows behind the position that needs filling to see if there is a unit that can move</p>","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/s:12FormationKit20FKFormationComponentC27getClosestUnitFromRowBehind33_06FCAC728E0236758DE8FE1D3DC589E9LLAA12FKUnitEntityCSgSi_AA18FKStandingPositionC14positionToFilltF":{"name":"getClosestUnitFromRowBehind(_:positionToFill:)","abstract":"<p>Score units based on how close they are to the position that needs filling. Favors outside units to fill spots","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/s:12FormationKit20FKFormationComponentC35getBestUnitToReassignFromCurrentRow33_06FCAC728E0236758DE8FE1D3DC589E9LLAA12FKUnitEntityCSgSi_AA18FKStandingPositionC08positionH4FilltF":{"name":"getBestUnitToReassignFromCurrentRow(_:positionToFill:)","abstract":"<p>Have to come up with a smart forumla for this.</p>","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/s:12FormationKit20FKFormationComponentC25findClosestUnitToPosition33_06FCAC728E0236758DE8FE1D3DC589E9LLAA12FKUnitEntityCSgAA010FKStandingI0C_AA07FKSquadR0C5squadtF":{"name":"findClosestUnitToPosition(_:squad:)","abstract":"<p>When the units are skirmishing during combat, this will help them reform by moving the closest unit to the next available position.</p>","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/s:12FormationKit20FKFormationComponentC20averageSquadPositionSC7CGPointVSgyF":{"name":"averageSquadPosition()","abstract":"<p>Loops over every unit and returns the average of their positions. Useful for targeting in spells, catapult, heraldry","parent_name":"FKFormationComponent"},"Classes/FKFormationComponent.html#/s:12FormationKit20FKFormationComponentC11ArrangementO":{"name":"Arrangement","abstract":"<p>Flagged to determine what sort of AI / UI interactions the unit should respond to</p>","parent_name":"FKFormationComponent"},"Classes/FKSquadAgent.html#/c:@M@FormationKit@objc(cs)FKSquadAgent(py)baseSpeed":{"name":"baseSpeed","abstract":"<p>Used as default of no modifiers applied</p>","parent_name":"FKSquadAgent"},"Classes/FKSquadAgent.html#/c:@M@FormationKit@objc(cs)FKSquadAgent(py)actualPosition":{"name":"actualPosition","abstract":"<p>This will only update when the entity is in motion. Necessary because the agent still moves 1/100th of a pixel even at rest.","parent_name":"FKSquadAgent"},"Classes/FKSquadAgent.html#/c:@M@FormationKit@objc(cs)FKSquadAgent(py)actualHeading":{"name":"actualHeading","abstract":"<p>Updated each frame when the entity is in motion</p>","parent_name":"FKSquadAgent"},"Classes/FKSquadAgent.html#/c:@M@FormationKit@objc(cs)FKSquadAgent(py)layerPosition":{"name":"layerPosition","abstract":"<p>Position of the squad is determined by the position of the agent</p>","parent_name":"FKSquadAgent"},"Classes/FKSquadAgent.html#/c:@M@FormationKit@objc(cs)FKSquadAgent(im)init":{"name":"init()","abstract":"<p>Sets up default mass, speed and empty behaviors.</p>","parent_name":"FKSquadAgent"},"Classes/FKSquadAgent.html#/c:@M@FormationKit@objc(cs)FKSquadAgent(im)setHeading:":{"name":"setHeading(_:)","abstract":"<p>Helper method to set both at once</p>","parent_name":"FKSquadAgent"},"Classes/FKSquadAgent.html#/c:@M@FormationKit@objc(cs)FKSquadAgent(im)setPos:":{"name":"setPos(_:)","abstract":"<p>Helper method to set both at once</p>","parent_name":"FKSquadAgent"},"Classes/FKSquadAgent.html#/c:@M@FormationKit@objc(cs)FKSquadAgent(im)setPlacement:rotation:":{"name":"setPlacement(_:rotation:)","abstract":"<p>Helper method to set both at once</p>","parent_name":"FKSquadAgent"},"Classes/FKSquadAgent.html#/c:@M@FormationKit@objc(cs)FKSquadAgent(im)updateFormationPositions":{"name":"updateFormationPositions()","abstract":"<p>Whenever the suads position is changed, the formation should update standingPositions</p>","parent_name":"FKSquadAgent"},"Classes/FKSquadAgent.html#/c:@M@FormationKit@objc(cs)FKSquadAgent(im)setWalkingSpeed":{"name":"setWalkingSpeed()","abstract":"<p>Figure out what to do with squad walking speed? Set to same as leader? Or slow leader down to same as everyone else, and make squad 10% faster?</p>","parent_name":"FKSquadAgent"},"Classes/FKSquadAgent.html":{"name":"FKSquadAgent","abstract":"<p>Generic agent class that mainly serves as a basic GKAgent2D. Encapsulated in case custom"},"Classes/FKFormationComponent.html":{"name":"FKFormationComponent","abstract":"<p>Tracks the desired formation, spacing, etc. Then, implements a strategy and determines desired positions.</p>"},"Classes/FKNavigationComponent.html":{"name":"FKNavigationComponent","abstract":"<p>Handles moving the squad agent, and related goals.</p>"},"Classes/FKCasualtyComponent.html":{"name":"FKCasualtyComponent","abstract":"<p>Handles squad death, but also updates all squad data when a unit dies.</p>"},"Classes/FKSquadDebugComponent.html":{"name":"FKSquadDebugComponent","abstract":"<p>Renders and prints data helpful in debugging and visualizing squad behaviors.</p>"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)agent":{"name":"agent","abstract":"<p>Handles steering behaviors</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)identifier":{"name":"identifier","abstract":"<p>Unique string passed in. Used for comparison</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)unitName":{"name":"unitName","abstract":"<p>The name of the unit (i.e. Melee1) that makes up the formation. Does not include heroes</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)displayName":{"name":"displayName","abstract":"<p>The display name of the unit (i.e. Lemon Knights) that makes up the formation.</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)scene":{"name":"scene","abstract":"<p>Game scene the squad was created on. Reference needed for agent positioning</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)layer":{"name":"layer","abstract":"<p>Layer within the scene the sqaud should live on. Also used for positioning</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)uiLayer":{"name":"uiLayer","abstract":"<p>Layer within the scene the sqaud should live on. Also used for positioning</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)units":{"name":"units","abstract":"<p>Handle of all units that belong to this squad</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)maxSquadSize":{"name":"maxSquadSize","abstract":"<p>Limits the growth of a squad</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)acceptsHeroes":{"name":"acceptsHeroes","abstract":"<p>Determines whether or not a hero can be added to a squad</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/s:12FormationKit13FKSquadEntityC10controllerAC10ControllerOvp":{"name":"controller","abstract":"<p>Friendly or enemy unit</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)disabled":{"name":"disabled","abstract":"<p>General flag to stop all actions on a squad. Could be used for frozen, disabled, rooted, etc</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)unitCount":{"name":"unitCount","abstract":"<p>Convenience getter that factors hero into squad size</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)unitAgents":{"name":"unitAgents","abstract":"<p>Convenience variable that returns all agents in a squad. Useful for flocking behaviors</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(py)hero":{"name":"hero","abstract":"<p>Optional reference to a hero unit contained within the squad.</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/s:12FormationKit13FKSquadEntityCACSS2id_SS4nameSSSg11displayNameSo7SKSceneCSg5sceneSo6SKNodeCSg5layerAN7uiLayerAA20FKFormationComponentC23ArrangementInstructionsV12instructionsAA21FKPathfindingProtocol_pSg10pathfinderSiSg12maxSquadSizeSb13acceptsHeroestcfc":{"name":"init(id:name:displayName:scene:layer:uiLayer:instructions:pathfinder:maxSquadSize:acceptsHeroes:)","abstract":"<p>All squads should be created through the FKSquadFactory</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/s:12FormationKit13FKSquadEntityC23setupIntelligenceStates33_680C5CF6B79861D76639BFEB887F74DCLLyyF":{"name":"setupIntelligenceStates()","abstract":"<p>Init state machine</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(im)addUnit:":{"name":"addUnit(_:)","abstract":"<p>When adding a unit, a decent bit of logic has to happen. It has to have existing modifiers applied, get a place in formation, etc.</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(im)addHero:":{"name":"addHero(_:)","abstract":"<p>Add a hero and cahce it. Make sure it is standing in the right place within the formation.</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(im)agentDidUpdate:":{"name":"agentDidUpdate(_:)","abstract":"<p>If in motion, always set the node position, and actual heading / position to that of the agent. Otherwise, ignore the agent.","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(im)agentWillUpdate:":{"name":"agentWillUpdate(_:)","abstract":"<p>Currently there are no external factors like physics, so the agent does not need to be updated before each processing frame.","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(im)isMoving":{"name":"isMoving()","abstract":"<p>Useful, consolidated lookup that everyone can call to determine if the squad is moving</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(im)updateAgentsRadius":{"name":"updateAgentsRadius()","abstract":"<p>Update squads agent raidus based on formation size</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(im)getUnit":{"name":"getUnit()","abstract":"<p>Convenience method to grab a standard unit and ignoring special units like heroes</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/c:@M@FormationKit@objc(cs)FKSquadEntity(im)getInjuredUnits":{"name":"getInjuredUnits()","abstract":"<p>Return units who have taken damage</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html#/s:12FormationKit13FKSquadEntityC10ControllerO":{"name":"Controller","abstract":"<p>Flagged to determine what sort of AI / UI interactions the unit should respond to</p>","parent_name":"FKSquadEntity"},"Classes/FKSquadEntity.html":{"name":"FKSquadEntity","abstract":"<p>The main entity responsible for all squad behaviors. A squad is a group of FKUnitEntities.</p>"},"Squads.html":{"name":"Squads"},"Squad Components.html":{"name":"Squad Components"},"Squad Formations.html":{"name":"Squad Formations"},"Units.html":{"name":"Units"},"Unit Components.html":{"name":"Unit Components"},"Unit Intelligence.html":{"name":"Unit Intelligence"},"Shared Classes.html":{"name":"Shared Classes"},"Factories.html":{"name":"Factories"},"Other Classes.html":{"name":"Other Classes","abstract":"<p>The following classes are available globally.</p>"},"Other Functions.html":{"name":"Other Functions","abstract":"<p>The following functions are available globally.</p>"},"Other Protocols.html":{"name":"Other Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Other Structs.html":{"name":"Other Structures","abstract":"<p>The following structures are available globally.</p>"}}